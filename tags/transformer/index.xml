<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Transformer on Chang Luo</title>
    <link>https://luochang212.github.io/tags/transformer/</link>
    <description>Recent content in Transformer on Chang Luo</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luochang212.github.io/tags/transformer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>文本情感分析</title>
      <link>https://luochang212.github.io/posts/sentiment_analysis/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/sentiment_analysis/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;用 Bert + Transformer Encoder + MLP 做文本情感分析。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/sentiment-analysis&#34; target=&#34;_blank&#34;&gt;sentiment-analysis&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;IMDB 数据集：&lt;a href=&#34;https://www.kaggle.com/datasets/lakshmi25npathi/imdb-dataset-of-50k-movie-reviews/data&#34; target=&#34;_blank&#34;&gt;imdb-dataset&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;本文要点：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;建立 词向量 ⇋ CSV 文件 双向 Pipeline&lt;/li&gt;&#xA;&lt;li&gt;用两种方法对 IMDB 电影评论做情感分析：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bert 预训练词向量 + MLP&lt;/li&gt;&#xA;&lt;li&gt;Bert + Transformer Encoder + 全连接层&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;✨ PS: 前两章是 Pipeline 代码，建议从第三章看起。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一读写词向量&#34;&gt;一、读写词向量&lt;/h3&gt;&#xA;&lt;p&gt;本节的主要目标是完成 &lt;code&gt;词向量 -&amp;gt; CSV 文件&lt;/code&gt; 和 &lt;code&gt;CSV 文件 -&amp;gt; 词向量&lt;/code&gt; 的 Pipeline。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;对语料做预处理&lt;/li&gt;&#xA;&lt;li&gt;获取词向量和句子向量&lt;/li&gt;&#xA;&lt;li&gt;将词向量存入 csv&lt;/li&gt;&#xA;&lt;li&gt;从 csv 中读取词向量&lt;/li&gt;&#xA;&lt;li&gt;将读写词向量功能整合成函数&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/sentiment-analysis/blob/main/1.store_embedding.ipynb&#39;)&#34;&gt;查看示例&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;二获取-imdb-数据集的-embedding&#34;&gt;二、获取 IMDB 数据集的 Embedding&lt;/h3&gt;&#xA;&lt;p&gt;将 IMDB 数据集中的电影评论转换成句子向量，然后存在 CSV 文件中。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;文本预处理&lt;/li&gt;&#xA;&lt;li&gt;计算句子向量&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/sentiment-analysis/blob/main/2.imdb_embedding.ipynb&#39;)&#34;&gt;查看示例&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;三用-mlp-做文本情感分析&#34;&gt;三、用 MLP 做文本情感分析&lt;/h3&gt;&#xA;&lt;p&gt;用 Bert + MLP 做 IMDB 电影评论文本情感分析。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Attention Is All You Need 论文精读</title>
      <link>https://luochang212.github.io/posts/transformer_arxiv/</link>
      <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/transformer_arxiv/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Transformer 的编码器变成了 BERT，解码器变成了 GPT。BERT 推动过去几年搜广推算法增长，而 GPT 促成了今天 GenAI 浪潮的爆发。这篇发表于 2017 年的论文，对今天产生了难以估量的影响。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;原文：&lt;a href=&#34;https://luochang212.github.io/gadget/attention-is-all-you-need/&#34; target=&#34;_blank&#34;&gt;Attention Is All You Need&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;论文翻译&#34;&gt;论文翻译&lt;/h2&gt;&#xA;&lt;h3 id=&#34;摘要&#34;&gt;摘要&lt;/h3&gt;&#xA;&lt;p&gt;主流 seq2seq 模型是基于编解码器架构实现的复杂 RNN 或 CNN 网络，其中表现最好的模型还会使用注意力机制来连接编码器和解码器。我们提出一种全新的简单网络架构：Transformer。它完全基于注意力机制，不使用 RNN 和 CNN。在两个机器翻译任务上的实验表明，它拥有更好的并行度，并且训练时间大大减少。在 WMT 2014 英德翻译任务上，我们的模型取得了 28.4 的 BLEU 分数，比现有最好模型提升 2 BLEU。在 WMT 2014 英法翻译任务上，我们的模型在 8 台 GPU 上训练 3.5 天后，在单一模型评分指标下获得 41.8 的最高分。相比之前文献的最佳模型，Transformer 极大降低了训练成本。我们还通过英语成分句法分析任务展示了 Transformer 的泛化能力，无论数据集大小，Transformer 都能很好地泛化到其他任务上。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-介绍&#34;&gt;1. 介绍&lt;/h3&gt;&#xA;&lt;p&gt;循环神经网络、长短记忆网络和门控循环网络被证明是序列模型和处理语言建模和机器翻译这类转换问题的最先进方法。在此之后，人们又花费大量努力挖掘循环神经网络语言模型和编解码器架构的潜力。&lt;/p&gt;&#xA;&lt;p&gt;循环神经网络对输入输出词元按位置进行计算，将词元的位置与时间步进行对齐，生成一系列隐状态 $h_t$。该隐状态是前一个隐状态 $h_{t-1}$ 和时间步 $t$ 时刻输入 $X_t$ 的函数。在训练样本时，这种内在的序列关系天然阻碍并行。对长序列文本，因为内存限制了批量样本的处理，导致这种阻碍更加明显。最近的研究利用因子分解和条件计算两种方法显著提升了计算效率，尤其后者还提高了模型的性能。但是序列计算这个最根本的限制依然存在。&lt;/p&gt;&#xA;&lt;p&gt;注意力机制在多种序列建模和转换建模任务中占有重要地位，它能对输入输出序列中的依赖关系进行位置无关的建模。除了少数几个例子外，注意力机制通常和循环神经网络一起使用。&lt;/p&gt;&#xA;&lt;p&gt;我们提出了 Transformer，一种不使用循环神经网络、纯基于注意力来捕获输入输出全局依赖关系的模型。Transformer 显著提高了并行度，并且在 8 台 P100 GPU 上训练 12 小时后，翻译质量达到了前所未有的高度。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
