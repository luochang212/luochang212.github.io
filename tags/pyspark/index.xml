<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PySpark on Chang Luo</title>
    <link>https://luochang212.github.io/tags/pyspark/</link>
    <description>Recent content in PySpark on Chang Luo</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luochang212.github.io/tags/pyspark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>频繁模式挖掘</title>
      <link>https://luochang212.github.io/posts/frequent_pattern_mining/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/frequent_pattern_mining/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;挖掘 &lt;strong&gt;频繁项集&lt;/strong&gt; 和 &lt;strong&gt;频繁序列&lt;/strong&gt; 是频繁模式挖掘的两个经典任务。它俩的区别是：前者是顺序无关的，而后者关注顺序。对于这两种任务，Spark 已经有非常成熟的解决方案了，在当前主流公司的数据量级下是够用的。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/frequent-pattern-mining&#34; target=&#34;_blank&#34;&gt;frequent-pattern-mining&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;频繁项集&lt;/strong&gt; 经常被念叨的一个用途，是挖掘经常被一起购买的商品（比如奶粉和尿布）。如果知道哪些商品经常被一起购买，就可以将这些商品打包出售。或者放在超市里相隔较远的两个地方，引导用户多逛。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;频繁序列&lt;/strong&gt; 也很有用。用户的连续行为可以看作一个序列。通过分析用户的频繁序列，产品经理可以发现用户习惯，进而优化功能排布和页面顺序，达到提升链路转化效率的效果。&lt;/p&gt;&#xA;&lt;p&gt;✨ 注意：运行以下代码依赖 &lt;a href=&#34;https://github.com/luochang212/frequent-pattern-mining/blob/main/utils.py&#34; target=&#34;_blank&#34;&gt;utils.py&lt;/a&gt; 文件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一频繁项集算法fpgrowth&#34;&gt;一、频繁项集算法：FPGrowth&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;数据预处理&lt;/li&gt;&#xA;&lt;li&gt;频繁项挖掘&#xA;&lt;ul&gt;&#xA;&lt;li&gt;频繁项集&lt;/li&gt;&#xA;&lt;li&gt;关联规则&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/frequent-pattern-mining/blob/main/1.FP-Growth.ipynb&#39;)&#34;&gt;查看示例&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;二频繁序列算法prefixspan&#34;&gt;二、频繁序列算法：PrefixSpan&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;一个简单的例子&lt;/li&gt;&#xA;&lt;li&gt;子序列挖掘&#xA;&lt;ul&gt;&#xA;&lt;li&gt;商品编码&lt;/li&gt;&#xA;&lt;li&gt;生成商品序列&lt;/li&gt;&#xA;&lt;li&gt;计算频繁子序列&lt;/li&gt;&#xA;&lt;li&gt;通过子序列回溯原始数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/frequent-pattern-mining/blob/main/2.PrefixSpan.ipynb&#39;)&#34;&gt;查看示例&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://spark.apache.org/docs/latest/ml-frequent-pattern-mining.html&#34; target=&#34;_blank&#34;&gt;Frequent Pattern Mining&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.kaggle.com/code/prasad22/market-basket-analysis-with-apriori-algorithm&#34; target=&#34;_blank&#34;&gt;Market Basket Analysis with Apriori Algorithm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div id=&#34;mini-overlay&#34; onclick=&#34;overlay_off()&#34;&gt;&lt;/div&gt;&#xA;&lt;div id=&#34;mini-window&#34;&gt;&lt;iframe id=&#34;mini-iframe&#34; frameBorder=&#34;0&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;button id=&#34;btn-close&#34; onclick=&#34;overlay_off()&#34;&gt;×&lt;/button&gt;&#xA;&lt;script src=&#34;https://luochang212.github.io/python-tips/overlay.js&#34;&gt;&lt;/script&gt;&#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://luochang212.github.io/python-tips/style.css&#34;&gt;</description>
    </item>
  </channel>
</rss>
