<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MapReduce on Chang Luo</title>
    <link>http://luochang212.github.io/tags/mapreduce/</link>
    <description>Recent content in MapReduce on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://luochang212.github.io/tags/mapreduce/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>漫谈 Hadoop Streaming</title>
      <link>http://luochang212.github.io/posts/hadoop_intro/</link>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/hadoop_intro/</guid>
      <description>本文主要聚焦如何用 Hadoop Streaming + Python 来编写 Hadoop 程序。
 Hadoop 是一个分布式计算框架。众所周知，实现分布式计算是一个繁琐的过程，Hadoop 通过一个标准化的数据处理流程，简化我们的操作步骤，让没有分布式计算背景的程序员也能轻松写出分布式程序。Hadoop 本身是用 Java 写的，因此对于非 Java 程序员来说，学 Hadoop 就必须先学 Java，这大大降低了 Hadoop 的友好程度。
Hadoop Streaming 被发明出来就是为了解决这个问题的，它支持用其他主流语言编写 Hadoop 程序。
1. 为什么要用分布式系统 算力在过去半个多世纪经历了高速增长，终于在本世纪触及了它的物理瓶颈。摩尔定律正在失灵。人们终于开始注意到用软件而非硬件的方法来给算力加速。
2003年，谷歌的两名工程师开发了一个分布式系统，经过后来几位工程师添枝加叶，它在 2006 年开源，并最终发展成今天我们所熟知的 Hadoop。
利用分布式系统，显而易见的好处是能缩短程序的运行时间。如果你的程序在常规时间内就能跑完，那么 Hadoop 对你来说就是画蛇添足。但是对大数据开发人员来说，这意味着不用坐在电脑前苦等结果，如果集群效率足够高，可能在几分钟内解决单机需要计算一天的问题。
2. Hadoop 是什么 Hadoop 是一个工具集合的总称，它包括两个重要组成部分：HDFS 和 MapReduce。
HDFS 是一个分布式存储系统，它负责将文件切割成分片，并分发到集群中的目标机器上；MapReduce 负责构建一个标准化的数据处理流，在经历规定的几道工序后，数据被处理成用户期望的。
这意味着 Hadoop 的学习至少包括两部分。要掌握 HDFS，你需要掌握 Hadoop 在命令行的基本命令，这块内容将在第六节文件操作中详细介绍。至于 MapReduce，本文使用 Python 来编写，这将下一节中提及。
3. MapReduce MapReduce 的重要性不言而喻，正是它定义了数据被如何处理。MapReduce 大致分为三个过程：Map, Shuffle 和 Reduce。其中，Shuffle 由 Hadoop 完成，我们写 Map 和 Reduce 就好。</description>
    </item>
    
  </channel>
</rss>