<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jaccard on Chang Luo</title>
    <link>https://luochang212.github.io/tags/jaccard/</link>
    <description>Recent content in Jaccard on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luochang212.github.io/tags/jaccard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SynchroTrap 算法实现</title>
      <link>https://luochang212.github.io/posts/synchrotrap/</link>
      <pubDate>Sat, 27 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/synchrotrap/</guid>
      <description>SynchroTrap 是一种基于 Jaccard 相似度和最大连通子图的异常挖掘算法，出自 Facebook 的论文 Uncovering Large Groups of Active Malicious Accounts in Online Social Networks.&#xA;GitHub 项目地址：SynchroTrap&#xA;✨ 本文做了什么：&#xA;用 mimesis 生成源数据，并基于源数据构建正态分布样本 通过构造一个 $\lambda$ 可调的泊松过程，生成用户到访的时间戳 提供一个由 7 个变量控制的异常数据生成函数，见 gen_attack_df 用 Jaccard 相似度构图，再用 NetworkX 对图做可视化 用 Spark 的 graphframes 计算最大连通子图 复现了论文 2.2 节的可视化效果，见 评估与可视化 介绍如何使用 Docker 构建 Spark 开发环境 注意：运行以下代码依赖 utils.py 文件和 gen_data 库。&#xA;一、样本生成 脱离互联网企业，我们很难拿到可供挖掘的异常数据样本。一种方法是自己生成。自己生成样本的好处是能拿到真正的 ground truth，而且可以精细地控制异常的规模和程度。&#xA;生成源数据 生成大盘数据 生成正态样本分布 生成 uid 并计算访问次数 时间与时间戳 用户日志表 生成异常数据 选择攻击开始时间 获取 ip 池 发起攻击 整合两份数据 Note: 与异常捕获的难度有关的变量：</description>
    </item>
  </channel>
</rss>
