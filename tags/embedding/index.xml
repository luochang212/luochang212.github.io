<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Embedding on Chang Luo</title>
    <link>https://luochang212.github.io/tags/embedding/</link>
    <description>Recent content in Embedding on Chang Luo</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 29 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luochang212.github.io/tags/embedding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>中文词向量生成</title>
      <link>https://luochang212.github.io/posts/chinese_embedding/</link>
      <pubDate>Sat, 29 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/chinese_embedding/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文做了一件有意思的事，用 Bert 生成《红楼梦》人名的词嵌入，再用 t-SNE 将高维的词向量降为二维后做可视化。结果发现，主角团三人的名字在向量空间中是紧紧挨在一起的。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/chinese-embedding&#34; target=&#34;_blank&#34;&gt;luochang212/chinese-embedding&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文探索的内容包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如何生成词向量&lt;/li&gt;&#xA;&lt;li&gt;如何生成句子向量&lt;/li&gt;&#xA;&lt;li&gt;如何找到语义相近的词&lt;/li&gt;&#xA;&lt;li&gt;如何对 embedding 做降维及可视化&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;一用-word2vec-生成词向量&#34;&gt;一、用 Word2Vec 生成词向量&lt;/h3&gt;&#xA;&lt;p&gt;用 Word2Vec 生成中英文词向量。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;英文词向量&lt;/li&gt;&#xA;&lt;li&gt;中文词向量&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/chinese-embedding/blob/main/1.word2vec.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;二用-bert-生成句子向量&#34;&gt;二、用 Bert 生成句子向量&lt;/h3&gt;&#xA;&lt;p&gt;用 Bert 生成中英文句子向量。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;英文句子向量&lt;/li&gt;&#xA;&lt;li&gt;中文句子向量&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/chinese-embedding/blob/main/2.bert.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;三寻找最近邻-embedding&#34;&gt;三、寻找最近邻 embedding&lt;/h3&gt;&#xA;&lt;p&gt;我的构想是：拿到红楼梦里所有词汇的 embedding，然后看我们感兴趣的词（比如林黛玉）离哪个词最近。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;分词&lt;/li&gt;&#xA;&lt;li&gt;批量计算 embedding&lt;/li&gt;&#xA;&lt;li&gt;计算每个词的 embedding&lt;/li&gt;&#xA;&lt;li&gt;计算我们关心词汇的近邻 embedding&lt;/li&gt;&#xA;&lt;li&gt;整合成一个类&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/chinese-embedding/blob/main/3.neighbour.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;四embedding-可视化&#34;&gt;四、Embedding 可视化&lt;/h3&gt;&#xA;&lt;p&gt;用 t-SNE 和 PCA 对 embedding 降维，做 2D &amp;amp; 3D 可视化&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;红楼梦中的人物关系&lt;/li&gt;&#xA;&lt;li&gt;中英美城市群&#xA;&lt;ul&gt;&#xA;&lt;li&gt;t-SNE&lt;/li&gt;&#xA;&lt;li&gt;PCA&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/chinese-embedding/blob/main/4.visualization.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;五头脑风暴&#34;&gt;五、头脑风暴&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Embedding 的稳定性&lt;/li&gt;&#xA;&lt;li&gt;Embedding 差值的意义&lt;/li&gt;&#xA;&lt;li&gt;输出 embedding 的数量&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/chinese-embedding/blob/main/5.brainstorming.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;附录和-qwen-25-的聊天记录&#34;&gt;附录：和 Qwen-2.5 的聊天记录&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; nn.Embedding 是一种预训练的embedding模型吗&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
