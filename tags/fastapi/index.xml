<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FastAPI on Chang Luo</title>
    <link>http://luochang212.github.io/tags/fastapi/</link>
    <description>Recent content in FastAPI on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://luochang212.github.io/tags/fastapi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FastAPI 初见</title>
      <link>http://luochang212.github.io/posts/fastapi/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/fastapi/</guid>
      <description>从零开始，用 FastAPI 构建一个简单 API.
 GitHub项目地址：calendar-api
API (application programming interface, 应用编程接口) 是软件间交流信息的接口。通常来说，API 服务架设在一台机器 (server) 上，另一台机器 (client) 通过访问其网络接口实现通信。除了以上两者之外，这个系统中还可能存在数据库 (database) 以存储 server 产生的数据。
1. REST API API 本身是高度定制化的，软件间可以用任意数据类型进行通信。但如果 API 是面向大众的，定制化将导致软件间沟通成本高企。这就需要有规范来约束软件间的沟通方式。REST API 就是其中之一。REST API 提出了六项指导原则，只要符合它提出的六项指导原则，就是符合 REST 风格的 API。
FastAPI 对构建 REST 风格的 API 提供良好的支持，这也是本文选用 FastAPI 的原因之一。
 REST API 提出的六项指导原则分别是：
 Client–server Stateless Cacheable Uniform interface Layered system Code on demand (optional)  [了解更多]
 1. 安装 FastAPI FastAPI 是 Python 下专门用于构建 API 的一个包。它代码精简、响应快速、服务稳定、支持异步，是快速开发的不二之选。吹牛也是白吹，反正我们今天就是要学它。</description>
    </item>
    
  </channel>
</rss>