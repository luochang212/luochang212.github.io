<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FastAPI on Chang Luo</title>
    <link>http://luochang212.github.io/tags/fastapi/</link>
    <description>Recent content in FastAPI on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://luochang212.github.io/tags/fastapi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FastAPI 初见</title>
      <link>http://luochang212.github.io/posts/fastapi/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/fastapi/</guid>
      <description>从零开始，用 FastAPI 搭建一个简单 API.
 GitHub项目地址：calendar-api
API (application programming interface, 应用编程接口) 是软件间相互交流信息的接口。通常来说，API 服务架设在一台机器 (server) 上，另一台机器 (client) 通过访问其网络接口实现通信。其中，server 还可能拥有数据库 (database)，以存储服务中产生的数据。
API 本身是高度定制化的，软件间可以用任意数据类型进行通信。但如果 API 是面向大众的，定制化将导致软件间沟通成本高企。因此需要有一些规范来约束软件间的沟通方式。REST API 就是其中一种规范，只要符合它提出的六项指导原则，就可称之为是符合 REST 风格的 API。
 REST API 提出的六项指导原则分别是：
 Client–server Stateless Cacheable Uniform interface Layered system Code on demand (optional)  [了解更多]
 FastAPI 对搭建 REST 风格的 API 提供良好的支持，这也是本文选择 FastAPI 的原因之一。
Let&amp;rsquo;s start!!!
1. 安装 FastAPI  详情参见 fastapi-installation.
 使用 FastAPI 前，我们只需要安装两个包。
1.fastapi</description>
    </item>
    
  </channel>
</rss>