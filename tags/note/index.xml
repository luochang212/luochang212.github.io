<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Note on Chang Luo</title>
    <link>http://luochang212.github.io/tags/note/</link>
    <description>Recent content in Note on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://luochang212.github.io/tags/note/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux 运维手册</title>
      <link>http://luochang212.github.io/posts/linux_handbook/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/linux_handbook/</guid>
      <description>不想当算法的开发不是好运维
一、常见操作 1）文件操作 命令 描述 touch [FILE] 创建文件 vim [FILE] 打开文件 cat [FILE] 打印文件 head [FILE] 打印文件头 10 行，展示 20 行用 head -n 20 [FILE] less [FILE] 打印文件，可以用 上键 下键 翻页 cd [PATH] 打开目录 mkdir [PATH] 创建目录 mkdir -p [PATH/TO/DIR] 创建多级目录 tar cvf file.tar ./data 把 data 目录 压缩成 file.tar 文件 tar xvf file.tar 解压 file.tar 文件 2）网络操作 命令 描述 ifconfig 查看有效的网络接口的状态 ifconfig -a 查看所有的网络接口的状态 wget [URL] 下载文件到当前路径 curl [URL] 访问网页 3）系统信息 命令 描述 uname -m 查看linux架构 uname -a 查看系统详细信息 cat /etc/centos-release 查看centos版本 ps aux 查看进程 ps -ef 查看进程 kill -9 [PID] 杀掉进程[PID] df -h 查看磁盘空间 history 查看历史命令 type [CMD] 查看命令所在路径，如type mkdir 4）文本处理 命令 描述 awk 取列 awk -F 指定分割符取列 grep -v 查找不包含特定匹配模式的行 wc -l 输出文件的行数 5）表达式 命令 描述 -gt 大于 -lt 小于 -eq 等于 -ne 不等于 -ge 大于等于 -le 小于等于 -a file 如果file存在则为真 -d file 如果file存在且为目录则为真 -f file 如果file存在且为普通文件则为真 sleep 1m 休眠一分钟 二、后台运行 后台运行 Bash 命令的两种方式：</description>
    </item>
    
    <item>
      <title>深度学习笔记</title>
      <link>http://luochang212.github.io/posts/d2l/</link>
      <pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/d2l/</guid>
      <description>跟李沐老师学深度学习，课程见 d2l，如有错误，欢迎拍砖 GitHub项目地址：AI-Project
〇、技术路线图 flowchart TD A[softmax 回归] --&gt;|无法拟合 XOR 函数| B[多层感知机] B --&gt; |高像素图片作为输入，模型参数爆炸| C[卷积] C --&gt;|数据的长宽下降太快| D[填充] C --&gt;|数据的长宽下降太慢| E[步幅] C --&gt;|缓解卷积对位置敏感| F[池化] C --&gt;|多模式识别与组合| G[多通道输入/输出] ❤️ powered by mermaid 一、softmax 回归 1. 虽然叫回归，但是softmax 解决的是分类问题 回归估计是一个连续值 分类预测是一个离散类别 2. 分类应用举例 MINIST ImageNet human-protein-atlas-image-classification (Kaggle) malware-classification (Kaggle) jigsaw-comment-classification (Kaggle) 3. 从回归到多类分类 &amp;ndash; 均方损失 对分类结果做 one-hot 编码：
$y = [y_1, y_2, , ... , y_n]^T$
$y_i=\left\{\begin{array}{l}1 \text { if } i=y \\ 0 \text { otherwise }\end{array}\right.</description>
    </item>
    
  </channel>
</rss>
