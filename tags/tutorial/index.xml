<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on Chang Luo</title>
    <link>http://luochang212.github.io/tags/tutorial/</link>
    <description>Recent content in tutorial on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://luochang212.github.io/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R语言学习笔记</title>
      <link>http://luochang212.github.io/posts/r_project/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/r_project/</guid>
      <description>本文类似 Quick-Reference Guide，随便看看就好。真想学的话，建议阅读人民邮电出版社的《R语言实战》，此书节奏好、内容紧凑，本人力荐 罒ω罒
 1. 基本使用 1.1 启动会话 只需要在 Mac Terminal 里输入 R，然后敲回车：
&amp;gt; R 1.2 第一段代码 # say hi x &amp;lt;- &amp;quot;Hello World&amp;quot; print(x) 文件命名为 test.R
有两种方式运行此脚本：
1）在会话中运行
&amp;gt; R &amp;gt; source(&amp;quot;test.R&amp;quot;) 2）直接运行
&amp;gt; Rscript test.R 1.3 常用命令    函数 功能     help.start() 打开帮助文档   help(&amp;quot;foo&amp;quot;) 或 ?foo 查看函数或数据集foo的帮助（引号可省略）   helo.search(&amp;quot;foo&amp;quot;) 或 ??foo 以foo为关键词搜索本地帮助文档   example(&amp;quot;foo&amp;quot;) 函数foo的使用示例（引号可省略）   RSiteSearch(&amp;quot;foo&amp;quot;) 以foo为关键词搜索在线文档   apropos(&amp;quot;foo&amp;quot;, mode=&amp;quot;function&amp;quot;) 列出名称中含有foo的所有可用函数   data() 列出当前已加载包中所有可用示例数据集   getwd() 显示当前的工作目录   setwd(&amp;quot;mydirectory&amp;quot;) 修改当前的工作目录为mydirectory   ls() 列出当前工作空间中的对象   rm(objectlist) 移除一个或多个对象   options() 显示或设置当前选项   save.</description>
    </item>
    
    <item>
      <title>Golang 学习笔记</title>
      <link>http://luochang212.github.io/posts/learning_golang/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/learning_golang/</guid>
      <description>Golang是2009年由谷歌的三位大佬(Robert Griesemer, Rob Pike, Ken Thompson)创造的一门新语言。Goalng有很多优点。比如，作为静态类型语言，Golang的依赖少，易于部署。它还支持协程并发，支持垃圾回收，可跨平台编译。Golang兼具动态语言的强大表达能力和C的执行效率，被誉为21世纪的C语言。
  var i = 0; function show_name() { i += 1; if (i%2 == 0) { document.getElementById(&#34;names&#34;).style.display = &#34;none&#34;; } else { document.getElementById(&#34;names&#34;).style.display = &#34;inline&#34;; } }  最近在学习Golang，为了寻找配置教程、优秀的电子书以及难度曲线适中的入门实践项目，我颇费了些功夫。趁着记忆还新鲜，我想分享一下我的学习路径以及学习资料。本文涉及Golang的安装、配置、运行以及实践项目。希望通过阅读本文，初学者们可以更快地找到适合自己的学习方向。
下载安装 官网提供标准安装包，一路点击就能完成安装。
安装包的链接是https://golang.org/dl/，更多关于安装的信息见安装 Go.
环境配置 （一）在终端运行
在命令行运行程序几乎不需要配置。只要下载Golang，然后按官方建议，创建一个名为gocode的文件夹，直接在里面写代码就可以了。为了防止以后import其他包发生错误，建议把gocode文件夹放在GOPATH下。如何知道Golang的工作路径(GOPATH)在哪里呢？打开命令行，输入go env，就能在输出里找到工作路径了（注意区别安装路径和工作路径，它们是两个不同的路径）。
下面是Golang在命令行运行时的一些常用命令：
 Linux系统下的常用命令（点击展开） 新建目录 $ mkdir foldername 
打开目录 ``` $ cd foldername ``` 返回上一级目录 ``` $ cd .. ``` 新建go文件 ``` $ touch filename.go ``` 删除go文件 ``` $ rm filename.</description>
    </item>
    
  </channel>
</rss>
