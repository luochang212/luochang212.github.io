<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API on Chang Luo</title>
    <link>https://luochang212.github.io/tags/api/</link>
    <description>Recent content in API on Chang Luo</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Nov 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luochang212.github.io/tags/api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FastAPI 初见</title>
      <link>https://luochang212.github.io/posts/fastapi/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/fastapi/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;什么是 API？如何从零开始，搭建自己的第一个API？本文带你搭建一个 API 小应用以了解 FastAPI 的使用细节&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;!-- &gt; 什么是 API？API 有什么用？本文从零开始教你搭建 API，认识 API 服务中的组件和 FastAPI 的使用细节。 --&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/calendar-api&#34; target=&#34;_blank&#34;&gt;calendar-api&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;什么是 API？&lt;/p&gt;&#xA;&lt;p&gt;简单来说，&lt;a href=&#34;https://en.wikipedia.org/wiki/API&#34;&gt;API&lt;/a&gt; &lt;!-- (application programming interface, 应用编程接口)  --&gt;是软件间相互传输数据的接口。它在生活中十分常见，比如博物馆订票系统中就使用了 API. 当你在手机应用上订票时，手机实际上发送了一个 HTTP 请求给远程服务器。远程服务器解析该请求。当确认所有字段信息均准确无误后，它才会把你的订票信息录入数据库，并回调成功标识。只有当上述操作全都被正确执行时，你的手机才会显示订票成功。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/fastapi-2.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;API 程序通常运行在服务端 (server) 上。&lt;strong&gt;客户端&lt;/strong&gt; (client) 通过向 API 提供的网络接口发送请求，以实现对&lt;strong&gt;服务端&lt;/strong&gt;的通信。服务端收到请求后，对请求进行解析。如果请求是合法的，则执行该请求，并将请求结果回调给客户端。一次典型的 API 请求大体上是这么个过程。&lt;/p&gt;&#xA;&lt;p&gt;在业务中，有时需要记录每次请求产生的中间状态、运行结果和日志数据。这时就需要 &lt;strong&gt;服务端&lt;/strong&gt; 调用 &lt;strong&gt;数据库&lt;/strong&gt; (database) 以存储业务中产生的各种信息。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-rest-api&#34;&gt;1. REST API&lt;/h3&gt;&#xA;&lt;p&gt;API 本身是高度个性化的，软件间可以用任意数据类型进行通信。但如果 API 缺少规范、各行其是，就会导致软件间沟通成本高企。&lt;a href=&#34;https://restfulapi.net/&#34;&gt;REST API&lt;/a&gt; 就是其中一种规范。REST API 提出了六项指导原则，只要 API 符合这六项指导原则，就可称之为“符合 REST 风格的 API”。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;REST API 提出的六项指导原则分别是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Client–server&lt;/li&gt;&#xA;&lt;li&gt;Stateless&lt;/li&gt;&#xA;&lt;li&gt;Cacheable&lt;/li&gt;&#xA;&lt;li&gt;Uniform interface&lt;/li&gt;&#xA;&lt;li&gt;Layered system&lt;/li&gt;&#xA;&lt;li&gt;Code on demand (optional)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;[&lt;a href=&#34;https://restfulapi.net/&#34;&gt;了解更多&lt;/a&gt;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monaco Editor 入门指南</title>
      <link>https://luochang212.github.io/posts/monaco_editor_tutorial/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/monaco_editor_tutorial/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;⚠️ 注意：本教程已过时。本教程的正确食用方法是从 GitHub &lt;a href=&#34;https://github.com/luochang212/monaco-editor-demos&#34; target=&#34;_blank&#34;&gt;monaco-editor-demos&lt;/a&gt; 上直接下载代码，然后点击 index.html 直接查看 Demo 及 源码。本文中描述的构建方法可能已不适用（更新于 2024.04）&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;!-- &gt; [Monaco Editor](https://github.com/microsoft/monaco-editor) 是一款开源的在线代码编辑器。它是 [VSCode](https://code.visualstudio.com/) 的浏览器版本，随着近年 VSCode 大热，Monaco Editor 也随之走红。目前虽未登上 Online Editor 领域的宝座，却也俨然有超越几位&lt;a onclick=&#34;show_name(&#39;hide-1&#39;)&#34;&gt;老前辈&lt;/a&gt;&lt;span id=&#34;hide-1&#34; style=&#34;display: none;&#34;&gt;（指 CodeMirror, Ace 之流）&lt;/span&gt;之势。 --&gt;&#xA;&lt;script&gt;&#xA;    var i = 0;&#xA;    function show_name(id) {&#xA;        i += 1;&#xA;        if (i%2 == 0) {&#xA;            document.getElementById(id).style.display = &#34;none&#34;;&#xA;        } else {&#xA;            document.getElementById(id).style.display = &#34;inline&#34;;&#xA;        }&#xA;    }&#xA;&lt;/script&gt;&#xA;&lt;p&gt;GitHub项目链接：&lt;a href=&#34;https://github.com/luochang212/monaco-editor-demos&#34; target=&#34;_blank&#34;&gt;monaco-editor-demos&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;在学习 Monaco Editor 的过程中，我发现网络上的中文教程很少。为了填补这部分空白，我决定写一份入门教程，帮助初学者快速熟悉 Monaco Editor。通过阅读本文，你可以了解以下内容：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;如何安装&lt;/li&gt;&#xA;&lt;li&gt;如何搭建&lt;/li&gt;&#xA;&lt;li&gt;如何调用常用 API&lt;/li&gt;&#xA;&lt;li&gt;如何寻找学习资源&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;&#xA;&lt;p&gt;新建项目文件夹，打开它：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir my-application&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#6639ba&#34;&gt;cd&lt;/span&gt; my-application&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;确保你已经下载了 &lt;code&gt;npm&lt;/code&gt;，然后安装 Monaco Editor：&lt;!--以下命令会在当前目录下新建一个名为 `node_modules` 的文件夹:--&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
