<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>api on Chang Luo</title>
    <link>http://luochang212.github.io/tags/api/</link>
    <description>Recent content in api on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://luochang212.github.io/tags/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>用Jupyter notebook规划旅行路线</title>
      <link>http://luochang212.github.io/posts/tsp_route/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/tsp_route/</guid>
      <description>GitHub项目链接：tsp-route
对于在欧洲的小伙伴们，复活节假在这一周就正式开始啦。大家都是怎么计划旅行的呢？
我的习惯是在出发前的最后一个晚上，花上半小时，在网上搜索当地感兴趣的景点 (POI), 然后在Google Maps上为它们点上小星星，以免和它们插肩而过。
每次搜完资料，我的谷歌地图上都攒满了密密麻麻的小星星。此时此刻，望着这些密集的星星，本人的偷懒本能发动了。我不禁发出灵魂之问：如何才能走最少的路，就周游所有景点呢?
找遍了谷歌和百度，都没发现我要路径规划功能。最接近需求还是谷歌的&amp;rdquo;Add destination&amp;rdquo;功能。然而这个功能只是把你点选的地点依次连接在一起罢了。可是次序对我们来说并不重要，只要总路径最短就好了。
没有现成货怎么办，自己写一个呗。
适用模型：TSP 模型 首先把问题抽象化，概括要解决的问题。我们的问题是：求从一个地方出发，遍历所有城市，回到起点的最短路径
这其实对应了一个非常经典的问题，那就是旅行商问题，又名TSP问题。旅行商问题的描述是这样的：一个商人在各个城市之间旅行，要求遍历所有城市并返回到出发点，要如何规划路线，才能使总路径最短。(这里就不过多解释了，更多信息见维基百科)
解决思路  用googlemaps包获取纬度和经度信息 用OR-Tools包求解TSP问题 最后用gmaps可视化结果  敲下来以后不禁感慨，Google Maps的API真的太好用了，到头来根本不需要自己敲多少代码orz
食用指南 项目地址 &amp;ndash;&amp;gt; 传送门
在体验之前，你需要以下配置：
 你需要一个Jupyter notebook, 推荐是直接安Anaconda3. 你还需要安装这些包：googleplaces, googlemaps, gmaps, ortools. 你需要一个Google Maps API key，获取链接: https://developers.google.com/maps/documentation/distance-matrix/start#get-a-key  完成配置等于成功的一半。在Jupyter notebook打开TSPSolver.ipynb，将第一个代码块的所有变量，改成自己的。比如自己的目的地和自己的API密码……最后从头到尾运行所有代码块，你就可以得到自己的旅行地图辣~
配置代码如下。
# input the places of interest (POI) places = &#39;YHA London Central Hostel&#39;, &#39;Coca-Cola London Eye&#39;, &#39;St. Paul\&#39;s Cathedral&#39;, &#39;Leadenhall Market&#39;, &#39;The National Gallery&#39; \ &#39;Big Ben&#39;, &#39;Buckingham Palace&#39;, &#39;Waterloo Station&#39; # the region Location=&#39;London&#39; # choose a mode Mode = &amp;quot;walking&amp;quot; # &amp;quot;driving&amp;quot;, &amp;quot;walking&amp;quot;, &amp;quot;bicycling&amp;quot;, &amp;quot;transit&amp;quot; # get Google API key from following website: # https://developers.</description>
    </item>
    
  </channel>
</rss>