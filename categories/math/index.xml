<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>math on Chang Luo</title>
    <link>http://luochang212.github.io/categories/math/</link>
    <description>Recent content in math on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://luochang212.github.io/categories/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>泊松分布的仿真与应用</title>
      <link>http://luochang212.github.io/posts/poisson/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/poisson/</guid>
      <description>本文尝试通过 Python 仿真来阐述泊松分布的本质；然后用一些生活化的例子，给大家提供一些关于如何利用泊松分布的思路。
 GitHub项目地址：python-tips/poisson
从泊松函数讲起 泊松分布 表示在给定时间段内发生给定数量的事件的概率。这个定义比较抽象。举个例子，比如你在接下来 20 分钟内接到电话的个数的概率，就服从泊松分布:
20 分钟内接到 0 个电话，有一个概率值 $P_1$；
20 分钟内接到 1 个电话，有一个概率值 $P_2$；
&amp;hellip; &amp;hellip;
20 分钟内接到 n 个电话，也有一个概率值$P_n$。
这些概率值组成一个概率分布列，它的值 $(n, P_n)$ 在二维坐标下连成一条曲线。这条曲线所在的函数就是泊松分布的概率密度函数，其表达式及图像如下：
$$\boxed{P(k | t, \lambda)=\frac{(\lambda t)^{k}}{k !} \exp (-\lambda t)}$$
从公式中，我们可以看出：只要确定了 $\lambda$ 和 t，该式就退化成概率$P$ 关于事件发生次数 k 的函数。 因此，确定 $\lambda$ 和 t 对我们至关重要。
$\lambda$, k, t 的定义：
 $\lambda$: 单位时间内，事件发生的频率。  k: 事件发生的次数。 t: 时间长度。   $\lambda$, k, t 三者的关系：</description>
    </item>
    
    <item>
      <title>排队论在网络性能分析中的应用</title>
      <link>http://luochang212.github.io/posts/network_performance_analysis/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/network_performance_analysis/</guid>
      <description>排队论(queueing theory)也称随机服务系统理论，它研究的内容有三部分：性态问题、最优化问题和统计推断问题。（《运筹学》清华大学出版社）
下图描述了排队过程的一般流程：
现实中的排队问题是多种多样的，对上述“顾客源”和“服务机构”应该作宽泛的理解。顾客和服务机构可以是生物，也可以是非生物；排队结构可以是有形的，也可以是无形的，比如向交换台要求通话的请求；顾客可以走向服务机构，也可以相反，比如送货上门。
 在网络中，服务器和用户之间相互传送数据包。数据包的传送需要时间，因此或多或少都会产生延迟。为了分析这些延迟，我们引入了一系列假设，并利用排队论对网络延迟进行建模分析。
本文将着重介绍网络性能分析(Network performance analysis)中几种常见的排队模型。它们是：
 The M/M/1 queuing system The birth-death process The M/M/m queuing system The M/M/1/m queuing system The M/M/∞ queuing system The M/M/m/m queuing system  另外，作为以上模型的理论基础，本文将首先介绍柏松过程(Poisson process)。
柏松过程的推导 柏松过程是马尔可夫过程的一个特例，在排队论中经常被用来估计顾客到达的概率分布。
（一）柏松过程的假设
 在时间间隔$\Delta t$内，有且仅有一位顾客到达的概率$P$和$\Delta t$成比例，比例系数为$\lambda$
 在时间间隔$\Delta t$内，至多只允许一位顾客到达（否则应该选取一个更短的时间间隔） $$\begin{aligned} P(\text { 在时间间隔 }[t, t+\Delta t] \text { 内，有且仅有一位顾客到达 }) &amp;amp;=\lambda \Delta t \\ P(\text { 在时间间隔 }[t, t+\Delta t]\text { 内，没有顾客到达 }) &amp;amp;=1-\lambda \Delta t \\ P(\text { 在时间间隔 }[t, t+\Delta t]\text { 内，多于一位顾客到达 }) &amp;amp;=0 \end{aligned}$$</description>
    </item>
    
  </channel>
</rss>