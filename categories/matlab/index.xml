<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MATLAB on Chang Luo</title>
    <link>http://luochang212.github.io/categories/matlab/</link>
    <description>Recent content in MATLAB on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://luochang212.github.io/categories/matlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>生态系统建模</title>
      <link>http://luochang212.github.io/posts/nature_system/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/nature_system/</guid>
      <description>本文介绍如何用 Agent-based model 的方法，对一个包含狼、麋鹿、草三种生物的生态系统建模。
GitHub 项目地址：nature-system
Agent指个体，Agent-base model即基于个体的模型。在Agent-based model中，虚拟实体(virtual entity)和现实个体一一对应。一般来说，虚拟实体的属性是对现实个体的抽象，虚拟实体的行为则是依照已经写好的规则迭代。这种建模方式往往涉及个体详细的行为模式，因此适合以研究个体行为规则为目的的建模。
需要注意的是，利用Agent-based model方法建模，并不是变量越多越好，过多的变量会造成调试上的困难。选取的变量足够支撑起我们研究的问题就可以了。
Note: 除了Agent-base model之外，Equation-based model也是一种比较常见的建模方式。Agent-based model适合表达每个个体身上发生了什么，比如个体的速度、位置的变化等。Equation-based model则而更适合表达系统平均发生了什么，比如人口模型中人口数量变化就更适合用Equation-based model建模。
模型假设 （一）生物的属性
模型内有三种生物：狼(wolf)、麋鹿(moose)、草(grass)。此外，狼还分为头狼和普通狼。下面这张表展示了头狼、普通狼、麋鹿的属性：
# age food pos speed last_breed population packNo range eaten 头狼 √ √ √ √ √ √ √ √ 普通狼 √ √ √ √ √ 麋鹿 √ √ √ √ √ 从上表可以看出，年龄、食物、位置、速度是头狼、普通狼和麋鹿的共有属性。last_breed指和上一次生育的时间间隔，在模型内用一次迭代表示一次时间间隔，因为迭代必须是整数，因此last_breed也是整型变量。头狼特有population属性，用来表示该头狼所在狼群中狼的数量；头狼特有range属性，表示该狼群活动的范围；头狼特有eaten属性，表示狼群在一次迭代中，全体成员吃到的麋鹿的总数。普通狼特有packNo属性，用来标记其所属狼群的头狼在列表中的索引号。普通狼没有last_breed属性，是因为其生育是以整个狼群为单位的。由于狼群是由头狼定义的，狼群相关的属性和行为也绑定在头狼身上，因此在代码实现上，狼群的生育是通过头狼实现的。
草没有上述生物那么复杂的模型，本模型中的草均匀平铺在环境中，且不会生长，吃完就没了。因此麋鹿为了获取新的食物来源，需要经常迁徙。
（二）生物的行为
头狼、普通狼和麋鹿都具有四种行为：死亡、迁徙、生育、捕猎。这四种行为在不同的生物种类上有不同的定义。比如麋鹿的迁徙规则是等到自己的位置没草吃了，才开始迁徙。而头狼迁徙规则则比较复杂，头狼会根据狼群内的种群数量，判断狼群的散布范围，以及调整迁徙的积极性。
1.死亡(die)
狼有两种死法：饿死或老死。麋鹿则有三种死法：饿死、老死或者被吃。
每一种生物都有固定的年龄上限值，超过该值将在本次迭代中死亡。本模型中，狼的最大年龄为25。如果一只狼如果没有饿死，它将在第25次迭代时老死。而饿死在生物food属性为0时发生。
对于麋鹿，每只麋鹿都有一个food属性。对于狼，整个狼群共享一个food属性，当狼群的food属性值为0时，会有一只普通狼死亡。
如果头狼死去时，狼群内普通狼的数量大于0，则会有一只普通狼晋升为头狼。
2.生育(breed)
不同的物种有不同的生育规则。
每只麋鹿一次只生一个。生育时母亲将把自己food属性值的一半分给孩子。生育有时间间隔，不能持续生育。在本模型中，麋鹿经历一次生育后，起码要经历10次迭代，才能进行第二次生育。此外，生育还有食物限制，当food属性高于10，麋鹿才会生育。如果同时满足时间间隔和食物条件，那么麋鹿将在本轮迭代进行生育。
本模型中，一个狼群为一个生育单位。和麋鹿的生育相似，狼群也仅在食物有富余时进行生育。生育的数量与狼群群内个体数量成正比。在不同群内生物数量范围内，比例系数略有不同。生育后，母体的食物也会按比例减少，并将此部分食物赋予孩子。同样，狼群的生育也有时间间隔限制。一次生育完成后，起码要经历5次迭代的时间，才能进行下一次生育。
3.迁徙(migrate)
狼群的迁徙取决于头狼，头狼相当于狼群的神经中枢。它接收上一轮狼群的捕猎信息，来判断下一步狼群的迁徙方向。由于头狼无法获知整张地图的麋鹿分布信息，它仅仅只能从已知信息推断，所以这可以视为局部优化问题。
具体来说，狼群的迁徙规则分两类：如果在上一次迭代中，狼群没有捕到一只麋鹿，那么狼群将随机移动以寻找麋鹿。如果起码吃到了一只，那么就用一个for循环，找出是狼群中的哪只狼吃到了麋鹿。在下一步迭代中，头狼将往这只狼的方向移动。</description>
    </item>
    
    <item>
      <title>【项目】基于蚁群算法的证券投资组合优化</title>
      <link>http://luochang212.github.io/posts/markowitz_model/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/markowitz_model/</guid>
      <description>在证券交易中，为了降低风险，经常使用一笔资金购买多支股票。那么，如何合理地选择证券组合，并确定每支证券的资金分配系数，以使预期风险最低，预期收益最高，就成了一个经典的经济学问题 &amp;ndash; 证券投资组合优化问题。
1952年，马科维茨首次提出均值-方差模型(Markowitz Mean-Variance Model)。该模型利用股票的历史交易数据，定义了股票的预期风险与收益，并引入“无差异曲线”和“有效市场边界”的概念，最终导出了最佳投资组合的计算公式。
本文利用蚁群算法，求解马科维茨均值-方差模型。蚁群算法是一个群体智能算法，因其较强的鲁棒性和适用性，被广泛应用于工业界，是一种研究较为成熟的算法。
研究背景 一个证券投资组合，简单来说就是一组证券及其选购系数的组合。选购系数均大于零（不允许做空），且和为1。
余超在**《基于蚁群算法的投资组合优化研究》**中给出了完整的模型假设。概括如下：
一只蚂蚁代表了一个投资组合； 在投资组合优化问题中的蚁群算法要采用连续域优化； 相较于传统蚁群问题，该算法中信息素应该在城市而非路径上积累； 可在蚂蚁移动过程中加入随机扰动以增加全局搜索能力。 余超在模型基础上已经做了非常完整的工作，但是没能求出完整的有效市场边界。
于是，卞蓓丽在**《蚁群算法在多目标优化的证券投资组合中的应用研究》**中指出，多目标优化的证券投资组合问题是没有绝对最优解的，而是有一群无法相互支配的解形成的有效边界。对多目标优化问题而言，最重要的是求出有效边界，而不仅仅是求出一两个更优解，后者用单目标就可以完成。余超的多目标研究没有求出有效边界。”
卞蓓丽提示我们：因为，投资组合问题，本质上是一个多目标优化问题。所以，我们要计算出完整的有效边界曲线，才算达成预期目标。
余超建立了基础模型，而卞蓓丽在余超的基础上进行了改进。本文借鉴他们二人建立的数学模型，利用多元函数连续域蚁群算法，求解马科维茨均值-方差模型。
研究方法 （一）马科维茨投资组合理论简介
投资组合的预期收益($𝒓_𝒑$)：单一证券i的预期收益为$E\left(r_{i}\right) $，式中$r_{i s}$为针对状况s证券i的收益率，$P_{s}$是状态s出现的概率；在计算了所有N个证券的预期收益率后，就可以计算出证券组合的预期收益率$𝒓_𝒑$，式中$x_{i}$表示组合中证券i所占的比例，即加权系数。
单一证券i的预期收益: $E\left(r_{i}\right)=\sum_{s=1}^{n} r_{i s} * P_{s}$
证券组合的预期收益: $\overline{r_{p}}=\sum_{i=1}^{N} x_{i} * E\left(r_{i}\right)$
投资组合的预期风险($𝝈_{𝒑}$)：单一证券i的预期风险为$\sigma_{\mathrm{i}} $，式中$r_{i s}$为针对状况s证券i的收益率，$P_{S}$是状态s出现的概率，$E\left(r_{i}\right) $为证券i的预期收益率 ；在计算了所有N个证券的预期风险后，就可以计算出证券组合的预期风险$\sigma_{\mathrm{p}}$ ，式中$\operatorname{cov}_{i j}$表示证券i和证券j的协方差，$x_{i}$和$x_{j}$表示组合中证券i和证券j所占的比例，即加权系数。
单一证券i的预期风险: $\sigma_{\mathrm{i}}=\left(\sum_{s=1}^{n}\left[r_{i s}-E\left(r_{i}\right)\right]^{2} * P_{S}\right)^{\frac{1}{2}}$
证券组合的预期风险: $\sigma_{\mathrm{p}}=\left(\sum_{i=1}^{N} \sum_{j=1}^{N} \operatorname{cov}_{i j} * x_{i} * x_{j}\right)^{\frac{1}{2}}$
有效市场边界: 有效市场边界是所有最佳投资组合(Efficient Portfolio)的集合。有效前沿曲线上面的每一点都代表一个最佳投资组合。下图曲线就是有效市场边界，有效市场边界满足以下两个条件：
对每一水平的风险，该组合提供最大的预期收益； 对每一水平的预期收益，该组合能提供最小的风险。 （二）蚁群算法在马科维茨模型中的应用
具体到蚁群算法中，一只蚂蚁代表一个投资组合$𝑃=\{𝑥_1,𝑥_2,⋯,𝑥_𝑛\}$。通过马科维茨理论，我们可以计算出该投资组合P对应的均值和方差。将均值、方差绘制在r-σ二维空间上，可以观察各个投资组合之间的帕累托关系，可分为三种情况：明显优于、明显劣于、和无法比较优劣。
最终我们求出的有效市场边界上的近似点，就是由这样一组无法比较优劣的点组成的，我们把它叫作一组无法相互支配的最优解。
研究模型 （一）模型假设
假设投资者选择n只证券，则每个投资组合可视为一个n维单位向量$𝑃=\{𝑥_1,𝑥_2,⋯,𝑥_𝑛\}$，其中$𝑥_𝑖$表示第𝑖只证券所占权重，$x_𝑖&amp;gt;0$。 假设在蚁群中有m只蚂蚁，每只蚂蚁都代表一个投资组合P。蚂蚁移动的过程，相当于从一个投资组合变换到另一个投资组合。 目标函数空间是一个连续的r-σ二维空间，其值由每个投资组合P的收益率的均值方差决定。其中r代表收益率均值，σ代表收益率的标准差。 该模型采用的是单期方法，即在t=0时刻买入一个资产组合，在t=1时卖出。 信息素在蚂蚁身上积累，越接近有效边界的蚂蚁，释放的信息素越多。蚂蚁对身边一定范围内的其他蚂蚁有吸引作用，且自身积累的信息素越多，吸引越强。 交易没有最小交易单位限制，即能以分数股的形式交易。 交易中无交易成本。 交易不允许卖空。(即$𝑥_𝑖≥0$) （二）模型改进：多元函数连续域蚁群算法</description>
    </item>
    
  </channel>
</rss>
