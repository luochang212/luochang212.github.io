<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Chang Luo</title>
    <link>https://luochang212.github.io/categories/devops/</link>
    <description>Recent content in DevOps on Chang Luo</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luochang212.github.io/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker 命令速查手册</title>
      <link>https://luochang212.github.io/posts/docker_command/</link>
      <pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/docker_command/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在低版本的服务器或存在共用关系的大组环境里，Docker 是个好东西。Docker 可以提供独立的运行时环境，以免受其他服务和人的干扰。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/docker-command&#34; target=&#34;_blank&#34;&gt;docker-command&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;一什么是-docker&#34;&gt;一、什么是 Docker&lt;/h3&gt;&#xA;&lt;p&gt;Docker 是一种容器技术。它通过轻量级的虚拟化，将程序及其依赖打包到一个被称为 &lt;strong&gt;容器&lt;/strong&gt; 的独立运行环境里，从而保证应用在不同环境中的一致性。&lt;/p&gt;&#xA;&lt;p&gt;容器与虚拟机，在功能上类似，但更加轻量化。容器提供的是操作系统级别的虚拟化；而虚拟机提供的是硬件级别的虚拟化。不同于虚拟机要为每个实例运行完整的操作系统，容器共享操作系统内核，因此更轻量、更高效。不过，轻量化的设计也带来了一些限制，例如 systemctl 等服务管理工具通常在容器中不可用。&lt;/p&gt;&#xA;&lt;h4 id=&#34;11-核心组件&#34;&gt;1.1 核心组件&lt;/h4&gt;&#xA;&lt;p&gt;在上手 Docker 前，有必要了解它的核心组件：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;镜像&lt;/strong&gt; (Image): 镜像拥有运行应用所需的一切，包括操作系统、代码、依赖等&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;容器&lt;/strong&gt; (Container): 容器由镜像创建，每个容器拥有独立的运行环境&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;你无法直接运行镜像，必须由镜像创建对应的容器才能运行。可以认为容器是镜像的实例。镜像负责存储与分发，容器负责提供服务。&lt;/p&gt;&#xA;&lt;h4 id=&#34;12-主要用途&#34;&gt;1.2 主要用途&lt;/h4&gt;&#xA;&lt;p&gt;Docker 的主要用途包括：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;轻量级虚拟化：可以当成虚拟机使用&lt;/li&gt;&#xA;&lt;li&gt;支持微服务架构：每个服务运行在独立容器中，易于扩展和管理&lt;/li&gt;&#xA;&lt;li&gt;支持 CI/CD 流水线：一次打包，即可在所有环境中运行&lt;/li&gt;&#xA;&lt;li&gt;保证环境的一致性：确保测试、开发、生产环境一致&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;如果你还不了解 Docker，可访问以下资源：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;官网：&lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;https://www.docker.com/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;入门文档：&lt;a href=&#34;https://docs.docker.com/guides/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://docs.docker.com/guides/&#34;&gt;https://docs.docker.com/guides/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;二常用命令&#34;&gt;二、常用命令&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-基础操作&#34;&gt;2.1 基础操作&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker info&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;查看 docker 系统信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker version&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;查看 docker 版本信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker --version&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;查看 docker 简略版本信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker login&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;登录 DockerHub&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker login nvcr.io &lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;登录 nvcr.io&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;22-镜像管理&#34;&gt;2.2 镜像管理&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker images&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;查看镜像&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker pull [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;拉取镜像&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker rmi [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;删除镜像&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker commit [CONTAINER] [IMAGE]:[TAG]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将容器保存为新的镜像&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker save -o myimage.tar [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将镜像保存到指定路径&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker load -i path/to/myimage.tar&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;从 tar 文件中加载镜像&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker tag [IMAGE_ID] [NEW_NAME]:[NEW_TAG]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;重命名 docker 镜像&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;23-容器管理&#34;&gt;2.3 容器管理&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker create [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建并运行容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker start [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;启动容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker stop [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;停止容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker restart [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;重启容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker ps&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;列出运行容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;列出所有容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker exec -it [CONTAINER] /bin/bash&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;启动交互模式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker rm [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;删除容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker port [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;查看端口映射&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker top [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;查看容器内进程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker stats [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;查看资源使用情况&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker cp [CONTAINER]:[PATH] [LOCAL_PATH]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;拷贝文本到本地&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker cp [LOCAL_PATH] [CONTAINER]:[PATH]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;拷贝文件到容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker export -o mycontainer.tar [CONTAINER]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;将容器存成文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker import path/to/mycontainer.tar [IMAGE]:[TAG]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;文件加载成镜像&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;24-容器运行&#34;&gt;2.4 容器运行&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run --name [NAME] [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建运行并命名容器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -d [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建容器并在后台运行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -p [LOCAL_PORT]:[CONTAINER_PORT] [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建容器并指定端口映射&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -v [LOCAL_PATH]:[CONTAINER_PATH] [IMAGE]&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建容器并将本地目录挂载到容器目录&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -it [IMAGE] /bin/bash&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;创建容器并启动交互式 shell&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;三docker-的简单使用&#34;&gt;三、Docker 的简单使用&lt;/h3&gt;&#xA;&lt;p&gt;Docker 是客户端 / 服务端分离的，因此使用前，通常需要检查一下服务端和客户端是否都在运行：&lt;/p&gt;</description>
    </item>
    <item>
      <title>初见向量引擎：RediSearch 和 Milvus</title>
      <link>https://luochang212.github.io/posts/redis_util/</link>
      <pubDate>Sun, 18 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/redis_util/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;建索引 Redis 够用了。一旦需要搜索向量，就可以考虑使用向量引擎。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;!-- &gt; - **RediSearch** 是 Redis 的一个模块，支持向量相似度搜索，它的优点与 Redis 生态无缝衔接，可复制 Redis 的生态优势&#xA;&gt; - **Milvus** 是一个开箱即用的开源向量数据库，有预置的语言模型，可以方便地生成嵌入，且支持多种索引类型 --&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/redis-util&#34; target=&#34;_blank&#34;&gt;redis-util&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文干了啥：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用容器启动 Redis，并将数据卷挂载到本地&lt;/li&gt;&#xA;&lt;li&gt;通过 Redis 的 Python API 做基础的 CRUD 操作&lt;/li&gt;&#xA;&lt;li&gt;在不借助任何插件的情况下，使用原生 Redis 存取向量&lt;/li&gt;&#xA;&lt;li&gt;使用 RediSearch 存取向量，并获取 TOP N 最近邻向量&lt;/li&gt;&#xA;&lt;li&gt;尝试使用向量引擎 Milvus 的一些基础功能&lt;/li&gt;&#xA;&lt;li&gt;基于 Redis “自制”向量引擎，支持设置索引过期时间，支持生成文本嵌入&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;✨ 注意：运行以下代码依赖 &lt;a href=&#34;https://github.com/luochang212/redis-util/blob/main/util.py&#34; target=&#34;_blank&#34;&gt;util.py&lt;/a&gt; 文件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;一安装-redis&#34;&gt;一、安装 Redis&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;下载镜像文件&lt;/li&gt;&#xA;&lt;li&gt;启动容器&lt;/li&gt;&#xA;&lt;li&gt;交互式 shell&lt;/li&gt;&#xA;&lt;li&gt;测试连接&lt;/li&gt;&#xA;&lt;li&gt;处理 CRUD 逻辑&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/redis-util/blob/main/1.安装Redis.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h2 id=&#34;二用-redis-存取-embedding&#34;&gt;二、用 Redis 存取 Embedding&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Word2vec 生成 Embedding&lt;/li&gt;&#xA;&lt;li&gt;数据类型转换&lt;/li&gt;&#xA;&lt;li&gt;存取 Embedding&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/redis-util/blob/main/2.用Redis存取Embedding.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h2 id=&#34;三redisearch-模块&#34;&gt;三、RediSearch 模块&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;安装 Docker 镜像&lt;/li&gt;&#xA;&lt;li&gt;存取向量&lt;/li&gt;&#xA;&lt;li&gt;查找最近邻向量&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;br&gt;&#xA;&lt;center&gt;&#xA;&lt;button class=&#34;demo-btn&#34; onclick=&#34;window_on(&#39;https://nbviewer.org/github/luochang212/redis-util/blob/main/3.RediSearch模块.ipynb&#39;)&#34;&gt;查看笔记&lt;/button&gt;&#xA;&lt;/center&gt;&#xA;&lt;br&gt;&#xA;&lt;h2 id=&#34;四开源向量引擎-milvus&#34;&gt;四、开源向量引擎 Milvus&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://milvus.io/docs/quickstart.md&#34; target=&#34;_blank&#34;&gt;Milvue&lt;/a&gt; 是一款为机器学习设计的开源向量数据库，支持存储、查询、索引向量。Milvus 的核心功能是向量相似度搜索，它使用近似最近邻搜索算法来加速搜索过程，找到与查询向量最相似的向量。Milvus 支持多种索引类型，包括 FLAT、IVF_FLAT、IVF_SQ8、IVF_PQ、HNSW 和 ANNOY，以适应不同的查询需求和数据规模。&lt;/p&gt;</description>
    </item>
    <item>
      <title>后台管理工具介绍</title>
      <link>https://luochang212.github.io/posts/process_manager/</link>
      <pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/process_manager/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;呀嘞呀嘞，我的 JupyterLab 怎么又挂了。&lt;/p&gt;&#xA;&lt;p&gt;简单的 &lt;code&gt;nohup [CMD] &amp;amp;&lt;/code&gt; 已经不够用，该研究一下后台管理工具了。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;问了一下 Qwen，大概有五款后台管理工具可用。这五款工具大致可分为两类：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;进程管理器：&lt;code&gt;systemd&lt;/code&gt;, &lt;code&gt;pm2&lt;/code&gt;, &lt;code&gt;supervisor&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;终端复用器：&lt;code&gt;screen&lt;/code&gt;, &lt;code&gt;tmux&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;总之，保持单个程序在后台运行，&lt;code&gt;systemd&lt;/code&gt; 就够用。如果要维持多个后台程序，&lt;code&gt;pm2&lt;/code&gt; 比较合适。&lt;code&gt;screen&lt;/code&gt; 和 &lt;code&gt;tmux&lt;/code&gt; 则是更临时的方案，适合偶尔用用的情况。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一systemd&#34;&gt;一、systemd&lt;/h3&gt;&#xA;&lt;p&gt;使用 systemd 管理 Jupyter lab 服务，必须先创建一个 systemd unit 文件来定义服务的启动、重启等行为。以下是创建 systemd 服务的步骤。&lt;/p&gt;&#xA;&lt;h4 id=&#34;11-创建-unit-文件&#34;&gt;1.1 创建 unit 文件&lt;/h4&gt;&#xA;&lt;p&gt;用 &lt;code&gt;vi&lt;/code&gt; 新建并打开 &lt;code&gt;jupyterlab.service&lt;/code&gt; 文件：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo vi /etc/systemd/system/jupyterlab.service&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置如下：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Unit]&#xA;Description=Jupyter Lab&#xA;After=network.target&#xA;&#xA;[Service]&#xA;Type=simple&#xA;User=[YOUR_USERNAME]&#xA;ExecStart=/home/[YOUR_USERNAME]/miniconda3/bin/jupyter lab --ip=0.0.0.0 --port=443 --no-browser --allow-root&#xA;WorkingDirectory=/home/[YOUR_USERNAME]/&#xA;Restart=on-failure&#xA;RestartSec=8s&#xA;&#xA;[Install]&#xA;WantedBy=multi-user.target&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;将 &lt;code&gt;[YOUR_USERNAME]&lt;/code&gt; 替换为你的用户名。如果你在 root 上开服务，记得在 ExecStart 后加一个 &lt;code&gt;--allow-root&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;如果你的服务不在 https 上，请用 &lt;code&gt;--port=80&lt;/code&gt; 或 &lt;code&gt;--port=8888&lt;/code&gt; 之类的其他端口&lt;/li&gt;&#xA;&lt;li&gt;在 https 上搭建 jupyter lab 服务的方法，参见 &lt;a href=&#34;https://luochang212.github.io/posts/jupyter_lab/#51-%E5%90%AF%E5%8A%A8-jupyterlab&#34; target=&#34;_blank&#34;&gt;在服务器上使用 JupyterLab&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;12-启动服务&#34;&gt;1.2 启动服务&lt;/h4&gt;&#xA;&lt;p&gt;1）重启守护进程，使新增的 systemd unit 文件生效。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深度学习工具箱 FlameAI</title>
      <link>https://luochang212.github.io/posts/flameai/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/flameai/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在上一篇博客&lt;a href=&#34;https://luochang212.github.io/posts/lightgbm_practice/&#34; target=&#34;_blank&#34;&gt;《LightGBM 工程实践》&lt;/a&gt;中，我把通用函数写到 &lt;a href=&#34;https://github.com/luochang212/lightgbm-binary/blob/main/util.py&#34; target=&#34;_blank&#34;&gt;util.py&lt;/a&gt; 文件，以实现代码复用。但是这么复用好麻烦，每次开新项目，得把 util.py 文件贴过去才行。为了省下这个贴的动作，我把它写成 Python 包了。现在下载一次，就可以到处使用啦！&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/flameai&#34; target=&#34;_blank&#34;&gt;flameai&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;一简单介绍&#34;&gt;一、简单介绍&lt;/h3&gt;&#xA;&lt;p&gt;我的这个包叫 &lt;a href=&#34;https://pypi.org/project/flameai&#34; target=&#34;_blank&#34;&gt;FlameAI&lt;/a&gt;。作为一个深度学习工具包，它的主要功能是 &lt;strong&gt;数据预处理&lt;/strong&gt; 和 &lt;strong&gt;模型评估&lt;/strong&gt;。FlameAI 旨在解决最后一公里问题。即在框架之外，业务代码之内，寻求最佳实践。为了让我的包看起来上流一点，我让 Kimi 帮我想了几个名字，最后还是选择了 FlameAI，因为这个名字最霸气。&lt;/p&gt;&#xA;&lt;p&gt;执行以下命令安装 FlameAI：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install flameai&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果嫌安装速度慢，可以使用腾讯源或阿里源：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 腾讯源&#xA;pip install flameai -i https://mirrors.cloud.tencent.com/pypi/simple/&#xA;&#xA;# 阿里源&#xA;pip install flameai -i https://mirrors.aliyun.com/pypi/simple/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果发现 pip 缓存目录占用了太多磁盘空间，可执行以下命令（通常不需要清理）&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 清理 pip 缓存文件&#xA;pip cache purge&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;二模块功能介绍&#34;&gt;二、模块功能介绍&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-二分类模型评估&#34;&gt;2.1 二分类模型评估&lt;/h4&gt;&#xA;&lt;p&gt;二分类模型评估是咱们的拳头产品。只需一行命令，就可以计算下面全部指标：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;accuracy&lt;/code&gt;: 准确率&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;precision&lt;/code&gt;: 精确率&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;recall&lt;/code&gt;: 召回率&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;f1_score&lt;/code&gt;: 精确率和召回率的调和平均数&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;auc&lt;/code&gt;: ROC曲线下的面积&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cross-entropy loss&lt;/code&gt;: 交叉熵损失&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;True Positive (TP)&lt;/code&gt;: 真阳&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;True Negative (TN)&lt;/code&gt;: 真阴&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;False Positive (FP)&lt;/code&gt;: 假阳&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;False Negative (FN)&lt;/code&gt;: 假阴&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;confusion matrix&lt;/code&gt;: 混淆矩阵&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;1简单用法&#34;&gt;1）简单用法&lt;/h5&gt;&#xA;&lt;p&gt;你可以直接指定阈值，下面代码中指定阈值为 &lt;code&gt;0.5&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JupyterLab 中有哪些黑科技</title>
      <link>https://luochang212.github.io/posts/jupyter_lab/</link>
      <pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/jupyter_lab/</guid>
      <description>&lt;p&gt;JupyterLab 你是真的火了&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;5 月 14 号 &lt;a href=&#34;https://openai.com/index/spring-update/&#34; target=&#34;_blank&#34;&gt;OpenAI 春季发布会&lt;/a&gt; 出现了这个画面：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/openai_jupyter_lab.PNG&#34; alt=&#34;openai_jupyter_lab&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;才知道 &lt;a href=&#34;https://jupyterlab.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34;&gt;JupyterLab&lt;/a&gt; 是 OpenAI 的日常开发工具。感谢 OpenAI 亲自带货。&lt;/p&gt;&#xA;&lt;p&gt;JupyterLab 拥有丰富的功能，并不只是 Python 解释器这么简单，让我向你们展示它的强大！&lt;/p&gt;&#xA;&lt;h3 id=&#34;安装-jupyterlab&#34;&gt;〇、安装 JupyterLab&lt;/h3&gt;&#xA;&lt;p&gt;执行以下命令安装 JupyterLab：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# For miniconda user&#xA;conda install -c conda-forge jupyterlab&#xA;&#xA;# For conda-forge user&#xA;# mamba install -c conda-forge jupyterlab&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&#34;https://github.com/mamba-org/mamba&#34; target=&#34;_blank&#34;&gt;mamba&lt;/a&gt; 是 &lt;a href=&#34;https://github.com/conda-forge/miniforge&#34; target=&#34;_blank&#34;&gt;miniforge&lt;/a&gt; 自带的包管理工具。在 miniforge 环境中，你可以用 &lt;code&gt;mamba&lt;/code&gt; 替代 &lt;code&gt;conda&lt;/code&gt;，比如 &lt;code&gt;mamba info --envs&lt;/code&gt;。使用 mamba 通常可以获得更高的下载速度。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;一制作-ppt&#34;&gt;一、制作 PPT&lt;/h3&gt;&#xA;&lt;h4 id=&#34;11-notebook-转-ppt&#34;&gt;1.1 Notebook 转 PPT&lt;/h4&gt;&#xA;&lt;p&gt;只需两步，就能把 Notebook 转成 PPT：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;设置 Slide Type&lt;/strong&gt;：为保证页面被正确渲染，你需要设置 Cell 的 &lt;code&gt;Slide Type&lt;/code&gt;。对于新版 Jupyter Lab，在右侧边栏上有带俩齿轮的按钮，点进去，然后一路点 &lt;code&gt;[Property Inspector] -&amp;gt; [COMMON TOOLS] -&amp;gt; [Slide Type]&lt;/code&gt;，在这里对 Cell 进行设置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux 运维手册</title>
      <link>https://luochang212.github.io/posts/linux_handbook/</link>
      <pubDate>Sat, 03 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/linux_handbook/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;基于 CentOS 系统&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;一常见操作&#34;&gt;一、常见操作&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1文件操作&#34;&gt;1）文件操作&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ls&lt;/td&gt;&#xA;          &lt;td&gt;列出当前文件夹下的文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ls -alh&lt;/td&gt;&#xA;          &lt;td&gt;列出包括隐藏文件在内的所有文件，显示详细信息，并以人类可读的方式显示占用的磁盘空间大小&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;touch [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;创建文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;vim [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;打开文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;cat [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;打印文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;head [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;打印文件头 10 行，展示 20 行用 &lt;code&gt;head -n 20 [FILE]&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;tail [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;打印文件尾 10 行，展示 20 行用 &lt;code&gt;tail -n 20 [FILE]&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;tail -f [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;实时查看文件的末尾新增的内容，一般用于打印监控日志&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;less [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;打印文件，可以用 &lt;code&gt;上键&lt;/code&gt; &lt;code&gt;下键&lt;/code&gt; 翻页&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;rm [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;删除文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;rm -rf [DIR]&lt;/td&gt;&#xA;          &lt;td&gt;递归删除路径&lt;code&gt;DIR&lt;/code&gt;下所有文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mv [FILE_A] [FILE_B]&lt;/td&gt;&#xA;          &lt;td&gt;文件&lt;code&gt;FILE_A&lt;/code&gt;改名为&lt;code&gt;FILE_B&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mv [FILE] [DIR]&lt;/td&gt;&#xA;          &lt;td&gt;文件&lt;code&gt;FILE&lt;/code&gt;移动到路径&lt;code&gt;DIR&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;cd [PATH]&lt;/td&gt;&#xA;          &lt;td&gt;打开目录&lt;code&gt;PATH&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mkdir [PATH]&lt;/td&gt;&#xA;          &lt;td&gt;创建目录&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;mkdir -p [PATH/TO/DIR]&lt;/td&gt;&#xA;          &lt;td&gt;创建多级目录&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;tar cvf file.tar ./data&lt;/td&gt;&#xA;          &lt;td&gt;把 &lt;code&gt;data&lt;/code&gt; 目录 压缩成 &lt;code&gt;file.tar&lt;/code&gt; 文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;tar xvf file.tar&lt;/td&gt;&#xA;          &lt;td&gt;解压 &lt;code&gt;file.tar&lt;/code&gt; 文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;2网络操作&#34;&gt;2）网络操作&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;lsof -i&lt;/td&gt;&#xA;          &lt;td&gt;列出所有与网络连接有关的进程及其打开的端口信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;lsof -i :[PORT]&lt;/td&gt;&#xA;          &lt;td&gt;列出特定端口的进程信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;lsof | grep deleted&lt;/td&gt;&#xA;          &lt;td&gt;列出占用未被正确删除的文件的句柄的进程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ifconfig&lt;/td&gt;&#xA;          &lt;td&gt;查看有效的网络接口的状态&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ifconfig -a&lt;/td&gt;&#xA;          &lt;td&gt;查看所有的网络接口的状态&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;arp -a&lt;/td&gt;&#xA;          &lt;td&gt;查看局域网中设备的ip地址&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ping [SERVER_IP]&lt;/td&gt;&#xA;          &lt;td&gt;检查远端服务器连通性&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;telnet [SERVER_IP] [SERVER_PORT]&lt;/td&gt;&#xA;          &lt;td&gt;检查远端服务器的端口的连通性&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;hostname -I&lt;/td&gt;&#xA;          &lt;td&gt;awk &amp;lsquo;{print $1}&amp;rsquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;wget [URL]&lt;/td&gt;&#xA;          &lt;td&gt;下载文件到当前路径&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;curl [URL]&lt;/td&gt;&#xA;          &lt;td&gt;访问网页&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -tnpl&lt;/td&gt;&#xA;          &lt;td&gt;显示TCP类型的端口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -unpl&lt;/td&gt;&#xA;          &lt;td&gt;显示UDP类型的端口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -r&lt;/td&gt;&#xA;          &lt;td&gt;显示路由表信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -g&lt;/td&gt;&#xA;          &lt;td&gt;显示多重广播功能群组组员名单&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -s&lt;/td&gt;&#xA;          &lt;td&gt;显示按协议分类统计信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -l&lt;/td&gt;&#xA;          &lt;td&gt;显示所有监听端口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -n&lt;/td&gt;&#xA;          &lt;td&gt;使用域名解析，将域名解析成ip地址&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -p&lt;/td&gt;&#xA;          &lt;td&gt;显示程序名和进程PID&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -t&lt;/td&gt;&#xA;          &lt;td&gt;显示所有的tcp协议的端口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;netstat -u&lt;/td&gt;&#xA;          &lt;td&gt;显示所有的udp协议的端口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ssh -p [SERVER_PORT] [USER]@[SERVER_IP]&lt;/td&gt;&#xA;          &lt;td&gt;ssh连接远端服务器&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ssh-keygen -R [SERVER_IP]&lt;/td&gt;&#xA;          &lt;td&gt;同IP机器重装后重连前注销老host&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;dig [example.com]&lt;/td&gt;&#xA;          &lt;td&gt;是 Linux 系统用于查询 DNS 信息的工具&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;3系统操作&#34;&gt;3）系统操作&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;top&lt;/td&gt;&#xA;          &lt;td&gt;查看CPU占用率&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;hostname&lt;/td&gt;&#xA;          &lt;td&gt;查看主机名&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;uname -m&lt;/td&gt;&#xA;          &lt;td&gt;查看linux架构&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;uname -a&lt;/td&gt;&#xA;          &lt;td&gt;查看系统详细信息&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;cat /etc/centos-release&lt;/td&gt;&#xA;          &lt;td&gt;查看centos版本&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ps aux&lt;/td&gt;&#xA;          &lt;td&gt;查看进程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ps -ef&lt;/td&gt;&#xA;          &lt;td&gt;查看进程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;kill -9 [PID]&lt;/td&gt;&#xA;          &lt;td&gt;杀掉进程&lt;code&gt;[PID]&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;df -h&lt;/td&gt;&#xA;          &lt;td&gt;查看磁盘空间&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;du -h / | sort -rh&lt;/td&gt;&#xA;          &lt;td&gt;根据文件磁盘占用倒排&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;du -h --max-depth=1&lt;/td&gt;&#xA;          &lt;td&gt;查看当前目录占用的磁盘空间大小&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;history&lt;/td&gt;&#xA;          &lt;td&gt;查看历史命令&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;type [CMD]&lt;/td&gt;&#xA;          &lt;td&gt;查看命令所在路径，如&lt;code&gt;type mkdir&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;echo $LANG&lt;/td&gt;&#xA;          &lt;td&gt;查看字符编码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;su -&lt;/td&gt;&#xA;          &lt;td&gt;切换到root用户&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;pip cache purge&lt;/td&gt;&#xA;          &lt;td&gt;pip缓存清理&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;conda clean --all&lt;/td&gt;&#xA;          &lt;td&gt;conda缓存清理&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ldd --version&lt;/td&gt;&#xA;          &lt;td&gt;查看 GLIBC 版本&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;4文本处理&#34;&gt;4）文本处理&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;awk&lt;/td&gt;&#xA;          &lt;td&gt;取列&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;awk -F&lt;/td&gt;&#xA;          &lt;td&gt;指定分割符取列&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;grep -v&lt;/td&gt;&#xA;          &lt;td&gt;查找不包含特定匹配模式的行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;wc -l&lt;/td&gt;&#xA;          &lt;td&gt;输出文件的行数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;echo &amp;ldquo;ABC&amp;rdquo; &amp;gt; [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;将文本&lt;code&gt;ABC&lt;/code&gt;写入文件&lt;code&gt;FILE&lt;/code&gt;行尾&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;echo &amp;ldquo;ABC&amp;rdquo; &amp;raquo; [FILE]&lt;/td&gt;&#xA;          &lt;td&gt;用文本&lt;code&gt;ABC&lt;/code&gt;覆写文件&lt;code&gt;FILE&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;5bash-表达式&#34;&gt;5）Bash 表达式&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;命令&lt;/th&gt;&#xA;          &lt;th&gt;描述&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-gt&lt;/td&gt;&#xA;          &lt;td&gt;大于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-lt&lt;/td&gt;&#xA;          &lt;td&gt;小于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-eq&lt;/td&gt;&#xA;          &lt;td&gt;等于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-ne&lt;/td&gt;&#xA;          &lt;td&gt;不等于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-ge&lt;/td&gt;&#xA;          &lt;td&gt;大于等于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-le&lt;/td&gt;&#xA;          &lt;td&gt;小于等于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;!&lt;/td&gt;&#xA;          &lt;td&gt;非&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;==&lt;/td&gt;&#xA;          &lt;td&gt;等于&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;=～&lt;/td&gt;&#xA;          &lt;td&gt;正则匹配，等式右侧写正则表达式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-a file&lt;/td&gt;&#xA;          &lt;td&gt;如果file存在则为真&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-d file&lt;/td&gt;&#xA;          &lt;td&gt;如果file存在且为目录则为真&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-f file&lt;/td&gt;&#xA;          &lt;td&gt;如果file存在且为普通文件则为真&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;sleep 1m&lt;/td&gt;&#xA;          &lt;td&gt;休眠一分钟&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;export PATH=[/some/new/path]:$PATH&lt;/td&gt;&#xA;          &lt;td&gt;新增环境变量&lt;code&gt;/some/new/path&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;$#&lt;/td&gt;&#xA;          &lt;td&gt;保存传递给shell脚本的命令行参数的数量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;$*&lt;/td&gt;&#xA;          &lt;td&gt;保存所有传递给shell脚本的命令行参数 ($1 $2 &amp;hellip;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;$@&lt;/td&gt;&#xA;          &lt;td&gt;保存所有传递给shell脚本的命令行参数 (&amp;quot;$1&amp;quot; &amp;ldquo;$2&amp;rdquo; &amp;hellip;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;$0&lt;/td&gt;&#xA;          &lt;td&gt;保存shell脚本的名字&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;$?&lt;/td&gt;&#xA;          &lt;td&gt;保存上一个执行的命令的退出码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;set -x&lt;/td&gt;&#xA;          &lt;td&gt;脚本调试命令，会打印当前脚本执行的所有命令及其参数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;6vim-命令&#34;&gt;6）vim 命令&lt;/h4&gt;&#xA;&lt;p&gt;以下命令需用 &lt;code&gt;vim&lt;/code&gt; 打开文件，再按 &lt;code&gt;esc&lt;/code&gt; 后输入，再按 &lt;code&gt;enter&lt;/code&gt; 执行&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyPI 打包小记</title>
      <link>https://luochang212.github.io/posts/pypi_packaging/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/pypi_packaging/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;你们这些家伙，好好看看我是怎么打包的吧！&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/hit-and-blow&#34; target=&#34;_blank&#34;&gt;hit-and-blow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;官方教程：&lt;a href=&#34;https://packaging.python.org/en/latest/tutorials/packaging-projects/&#34;&gt;Packaging Python Projects&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;背景知识：&lt;a href=&#34;https://docs.python.org/3/tutorial/modules.html#packages&#34;&gt;Modules&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;一文件结构介绍&#34;&gt;一、文件结构介绍&lt;/h3&gt;&#xA;&lt;p&gt;打包前，需构建如下文件结构：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;packaging_tutorial/&#xA;├── LICENSE&#xA;├── pyproject.toml&#xA;├── README.md&#xA;├── src/&#xA;│   └── YOUR_PACKAGE_NAME/&#xA;│       ├── __init__.py&#xA;│       └── example.py&#xA;└── tests/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;各个 &lt;code&gt;文件&lt;/code&gt; / &lt;code&gt;文件夹&lt;/code&gt; 说明：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;packaging_tutorial&lt;/code&gt;: 项目文件夹&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;LICENSE&lt;/code&gt;: 开源协议，可由 GitHub 生成&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pyproject.toml&lt;/code&gt;: 打包配置文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;: 项目文档&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;src&lt;/code&gt;: 项目结构要求的，用来放主程序&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;YOUR_PACKAGE_NAME&lt;/code&gt;: 主程序文件夹，以“你的包名”命名文件夹&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;二添加配置文件&#34;&gt;二、添加配置文件&lt;/h3&gt;&#xA;&lt;p&gt;将以下内容修改一下，改改名字邮箱什么的，存成配置文件 &lt;code&gt;pyproject.toml&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[build-system]&#xA;requires = [&amp;#34;hatchling&amp;#34;]&#xA;build-backend = &amp;#34;hatchling.build&amp;#34;&#xA;&#xA;[project]&#xA;name = &amp;#34;example_package_YOUR_USERNAME_HERE&amp;#34;&#xA;version = &amp;#34;0.0.1&amp;#34;&#xA;authors = [&#xA;  { name=&amp;#34;Example Author&amp;#34;, email=&amp;#34;author@example.com&amp;#34; },&#xA;]&#xA;description = &amp;#34;A small example package&amp;#34;&#xA;readme = &amp;#34;README.md&amp;#34;&#xA;requires-python = &amp;#34;&amp;gt;=3.7&amp;#34;&#xA;classifiers = [&#xA;    &amp;#34;Programming Language :: Python :: 3&amp;#34;,&#xA;    &amp;#34;License :: OSI Approved :: MIT License&amp;#34;,&#xA;    &amp;#34;Operating System :: OS Independent&amp;#34;,&#xA;]&#xA;&#xA;[project.urls]&#xA;&amp;#34;Homepage&amp;#34; = &amp;#34;https://github.com/pypa/sampleproject&amp;#34;&#xA;&amp;#34;Bug Tracker&amp;#34; = &amp;#34;https://github.com/pypa/sampleproject/issues&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;三打包&#34;&gt;三、打包&lt;/h3&gt;&#xA;&lt;h4 id=&#34;31-准备打包环境&#34;&gt;3.1 准备打包环境&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python3 -m pip install --upgrade pip&#xA;python3 -m pip install --upgrade build&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;32-打包&#34;&gt;3.2 打包&lt;/h4&gt;&#xA;&lt;p&gt;来到 &lt;code&gt;pyproject.toml&lt;/code&gt; 所在目录，打开命令行，运行代码：&lt;/p&gt;</description>
    </item>
    <item>
      <title>FastAPI 初见</title>
      <link>https://luochang212.github.io/posts/fastapi/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/fastapi/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;什么是 API？如何从零开始，搭建自己的第一个API？本文带你搭建一个 API 小应用以了解 FastAPI 的使用细节&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;!-- &gt; 什么是 API？API 有什么用？本文从零开始教你搭建 API，认识 API 服务中的组件和 FastAPI 的使用细节。 --&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/calendar-api&#34; target=&#34;_blank&#34;&gt;calendar-api&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;什么是 API？&lt;/p&gt;&#xA;&lt;p&gt;简单来说，&lt;a href=&#34;https://en.wikipedia.org/wiki/API&#34;&gt;API&lt;/a&gt; &lt;!-- (application programming interface, 应用编程接口)  --&gt;是软件间相互传输数据的接口。它在生活中十分常见，比如博物馆订票系统中就使用了 API. 当你在手机应用上订票时，手机实际上发送了一个 HTTP 请求给远程服务器。远程服务器解析该请求。当确认所有字段信息均准确无误后，它才会把你的订票信息录入数据库，并回调成功标识。只有当上述操作全都被正确执行时，你的手机才会显示订票成功。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/fastapi-2.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;API 程序通常运行在服务端 (server) 上。&lt;strong&gt;客户端&lt;/strong&gt; (client) 通过向 API 提供的网络接口发送请求，以实现对&lt;strong&gt;服务端&lt;/strong&gt;的通信。服务端收到请求后，对请求进行解析。如果请求是合法的，则执行该请求，并将请求结果回调给客户端。一次典型的 API 请求大体上是这么个过程。&lt;/p&gt;&#xA;&lt;p&gt;在业务中，有时需要记录每次请求产生的中间状态、运行结果和日志数据。这时就需要 &lt;strong&gt;服务端&lt;/strong&gt; 调用 &lt;strong&gt;数据库&lt;/strong&gt; (database) 以存储业务中产生的各种信息。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-rest-api&#34;&gt;1. REST API&lt;/h3&gt;&#xA;&lt;p&gt;API 本身是高度个性化的，软件间可以用任意数据类型进行通信。但如果 API 缺少规范、各行其是，就会导致软件间沟通成本高企。&lt;a href=&#34;https://restfulapi.net/&#34;&gt;REST API&lt;/a&gt; 就是其中一种规范。REST API 提出了六项指导原则，只要 API 符合这六项指导原则，就可称之为“符合 REST 风格的 API”。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;REST API 提出的六项指导原则分别是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Client–server&lt;/li&gt;&#xA;&lt;li&gt;Stateless&lt;/li&gt;&#xA;&lt;li&gt;Cacheable&lt;/li&gt;&#xA;&lt;li&gt;Uniform interface&lt;/li&gt;&#xA;&lt;li&gt;Layered system&lt;/li&gt;&#xA;&lt;li&gt;Code on demand (optional)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;[&lt;a href=&#34;https://restfulapi.net/&#34;&gt;了解更多&lt;/a&gt;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python 工程化实践</title>
      <link>https://luochang212.github.io/posts/python_practice/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/python_practice/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;学 Python 不应仅限于学编程，同样应该学习工程知识，比如虚拟环境、编码风格以及单元测试等。本文致力于介绍 Python 工程化所需的前置知识。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;font color=&#34;red&#34;&gt;⚠️&lt;/font&gt; 注意：以下教程适用于 MacOS。&lt;/p&gt;&#xA;&lt;h2 id=&#34;部署环境&#34;&gt;部署环境&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-anaconda&#34;&gt;1. Anaconda&lt;/h3&gt;&#xA;&lt;p&gt;Anaconda 是一个包管理器，它能让你方便的管理 Python 版本和包版本。并且， Anaconda 聚合了 Jupyter notebook，使其大受数据科学家和人工智能工程师的欢迎。下面我们来介绍如何用 Anaconda 管理我们的 Python 环境。&lt;/p&gt;&#xA;&lt;p&gt;如果你还没有 Anaconda，安装一个：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;海外用户直接访问 &lt;a href=&#34;https://www.anaconda.com/products/individual&#34;&gt;Anaconda 官网&lt;/a&gt; 下载即可&lt;/li&gt;&#xA;&lt;li&gt;国内用户无法访问 Anaconda 官网(被墙)，建议选择&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/anaconda/&#34;&gt;清华镜像&lt;/a&gt;替代。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;安装完以后，在命令行界面输入 &lt;code&gt;conda&lt;/code&gt;，会打印一个帮助文档。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/conda-command.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;帮助文档大概是说 conda 有哪些常用命令，比如下面这些：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda &lt;span style=&#34;color:#6639ba&#34;&gt;help&lt;/span&gt;  &lt;span style=&#34;color:#57606a&#34;&gt;# 打印帮助文档&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda info  &lt;span style=&#34;color:#57606a&#34;&gt;# 查看conda信息，包括当前在哪个环境，环境路径，Python版本等信息&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda list  &lt;span style=&#34;color:#57606a&#34;&gt;# 列出conda下安装了哪些包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda install &lt;span style=&#34;color:#0550ae&#34;&gt;[&lt;/span&gt;package_name&lt;span style=&#34;color:#0550ae&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#57606a&#34;&gt;# 在conda环境中安装某个包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda update &lt;span style=&#34;color:#0550ae&#34;&gt;[&lt;/span&gt;package_name&lt;span style=&#34;color:#0550ae&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#57606a&#34;&gt;# 升级conda环境中的某个包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;：后文仅专注介绍虚拟环境相关内容，更多内容请在 &lt;a href=&#34;https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html&#34;&gt;Anaconda 官方文档&lt;/a&gt; 中查看。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Python 环境分为本地环境(lcoal env) 和全局环境 (global env) 。为一个项目配置环境，应该配置本地环境；为本机所有项目配置环境，则应该配置全局环境。&lt;/p&gt;&#xA;&lt;h4 id=&#34;-部署全局环境&#34;&gt;① 部署全局环境&lt;/h4&gt;&#xA;&lt;p&gt;📖 新建环境&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的 Python 不可能这么可爱</title>
      <link>https://luochang212.github.io/posts/python_tips/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/python_tips/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Python 学习笔记，如有错误，欢迎指正 &lt;img src=&#34;https://luochang212.github.io/img/quyin/witty.png&#34; class=&#34;my-emoji&#34; style = &#34;height: 32px;&#34;&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/python-tips&#34; target=&#34;_blank&#34;&gt;python-tips&lt;/a&gt;&lt;/p&gt;&#xA;&lt;!-- 本文从 2019 年 11 月一路更新到了 2020 年 11 月，我也从实习转向了正式工作。一年前，我尚未将 Python 视作主力编程语言。但今天，它毫无疑问已经是我最熟稔的伙伴之一了。&#xA;&#xA;Python 有许多缺点，但是它在机器学习、科学计算、可视化、网络编程等方面的优势，几乎无可匹敌。它的身影在一些不追求高性能的、离线低频次的场景下频繁出现。在诸如数据分析、算法预研、仿真建模等领域，都将 Python 作为首选语言。 --&gt;&#xA;&lt;!-- 它的实用性毋庸置疑，在与计算机有学科交叉的科研院所，包括物理学、天文学、地质学、飞行动力学、地理信息系统、药学等领域的学术研究中都有 Python 的身影；此外，在大厂的数据中台，诸如数据开发、数据分析、数据挖掘等工作，通常也都是用 Python 完成的。 --&gt;&#xA;&lt;!-- 但是，入门 Python 并不容易。因为除了学习使用 Python 写代码，你还要学习关于这门语言自身的知识。例如，Python 有将文件视作模块 (module) 的机制。如果你要具体地理解这件事，你还需要深究 `import` 、 `if __name__ == &#34;__main__&#34;` 和 `__init__.py` 的含义。&#xA;&#xA;Python 语言就像一棵枝叶繁茂的树。如果你找不到枝干，就会被无数琐碎细节淹没，无从入手。《大学》云，知所先后则近道矣，正有其意。我衷心希望本文能成为学习你 Python 的“枝干”和“抓手”。 --&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;相关书籍推荐&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;入门：《Python编程从入门到实践》 [&lt;a href=&#34;https://book.douban.com/subject/26829016/&#34;&gt;豆瓣链接&lt;/a&gt;]&lt;/li&gt;&#xA;&lt;li&gt;初级：《Python学习手册》(英文名 &lt;em&gt;Learning Python&lt;/em&gt;) [&lt;a href=&#34;https://book.douban.com/subject/30364619/&#34;&gt;豆瓣链接&lt;/a&gt;]&lt;/li&gt;&#xA;&lt;li&gt;中级：《流畅的Python》[&lt;a href=&#34;https://book.douban.com/subject/27028517/&#34;&gt;豆瓣链接&lt;/a&gt;]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;PS: 针对每个阶段，我推荐的是我认为最好的那本书。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;语言基础&#34;&gt;语言基础&lt;/h2&gt;&#xA;&lt;h3 id=&#34;列表&#34;&gt;列表&lt;/h3&gt;&#xA;&lt;p&gt;本文从以下几个方面介绍列表：&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyQt5 侧边栏布局</title>
      <link>https://luochang212.github.io/posts/pyqt5_layout_sidebar/</link>
      <pubDate>Fri, 10 May 2019 21:43:09 +0100</pubDate>
      <guid>https://luochang212.github.io/posts/pyqt5_layout_sidebar/</guid>
      <description>&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/pyqt5-demo&#34; target=&#34;_blank&#34;&gt;pyqt5-demo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;主流软件如网易云音乐、腾讯电脑管家，都有侧边栏。侧边栏能有效扩展应用空间，使软件功能的层次更加分明。&lt;/p&gt;&#xA;&lt;p&gt;但PyQt5并没有一个专门的方法实现侧边栏。要实现侧边栏，主要有两种技术路线。一是从标签部件(QTabWidget)改造而来，二是用网格布局(QGridLayout)画出来。本文采用第一种技术路线，制作一个简单的侧边栏应用。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; 两种技术路线制作的侧边栏有细微的差别。如果采用第二种技术路线(QGridLayout)，侧边栏和内容页之间没有明显的分界。所以需要额外地在侧边栏和内容页之间加一条线，来突出两者属于不同的组件。而第一种技术路线(QTabWidget)不需要，创建的侧边栏和内容页之间的区别明显。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;下图是一个用第二种技术路线(QGridLayout)制作的应用，可以看到侧边栏和内容页中间画了一条线，以突出两个组件的分界。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/QGridLayout.png&#34; alt=&#34;QGridLayout&#34;&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;步骤分析&#34;&gt;步骤分析&lt;/h3&gt;&#xA;&lt;p&gt;在开始写代码之前，我们先分析一下制作侧边栏需要几个步骤。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;添加部件&lt;/li&gt;&#xA;&lt;li&gt;为部件设置布局&lt;/li&gt;&#xA;&lt;li&gt;将标签部件改造成侧边栏的内容页&lt;/li&gt;&#xA;&lt;li&gt;为侧边栏按钮编写函数，实现内容页之间的跳转&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;添加部件并设置布局&#34;&gt;添加部件并设置布局&lt;/h3&gt;&#xA;&lt;p&gt;此段不详述。关于部件和布局的基础知识，在上一篇中有介绍，详见&lt;a href=&#34;https://www.luochang.ink/posts/pyqt5_layout/&#34;&gt;PyQt5 布局浅析&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;下面这段代码添加了部件且设置了布局。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#24292e&#34;&gt;PyQt5.QtWidgets&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#24292e&#34;&gt;sys&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Window&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;QMainWindow&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6639ba&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#6639ba&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#57606a&#34;&gt;# set the title of main window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setWindowTitle&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;Sidebar layout - www.luochang.ink&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#57606a&#34;&gt;# set the size of window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;width &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;800&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;height &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;0.618&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;width&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;resize&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;height&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#57606a&#34;&gt;# add all widgets&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_1 &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QPushButton&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_2 &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QPushButton&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_3 &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QPushButton&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_4 &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QPushButton&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;initUI&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;initUI&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_layout &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QVBoxLayout&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;addWidget&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_1&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;addWidget&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_2&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;addWidget&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_3&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;addWidget&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn_4&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;addStretch&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setSpacing&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_widget &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QWidget&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        left_widget&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setLayout&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;left_layout&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;right_widget &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QTabWidget&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;right_widget&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;tabBar&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setObjectName&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;mainTab&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main_layout &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QHBoxLayout&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;addWidget&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;left_widget&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;addWidget&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;right_widget&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setStretch&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main_layout&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setStretch&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main_widget &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QWidget&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        main_widget&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setLayout&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;main_layout&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setCentralWidget&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;main_widget&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#953800&#34;&gt;__name__&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QApplication&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;sys&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;argv&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ex &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; Window&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ex&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;show&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;exit&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;app&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;exec_&lt;span style=&#34;color:#1f2328&#34;&gt;())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/sidebar_basic.JPG&#34; alt=&#34;sidebar_basic&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyQt5 布局浅析</title>
      <link>https://luochang212.github.io/posts/pyqt5_layout/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      <guid>https://luochang212.github.io/posts/pyqt5_layout/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;PyQt5是Python环境下用来开发UI界面的一个包。它容易上手，对初学者友好，并且拥有丰富的函数库，可以实现大部分桌面应用的开发需求，且支持QSS语言，能够对界面风格做个性化调整。总体来说，PyQt5是一款开发效率极高的UI框架。这篇文章从零开始，教你搭建一个属于自己的桌面应用。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;GitHub 项目地址：&lt;a href=&#34;https://github.com/luochang212/pyqt5-demo&#34; target=&#34;_blank&#34;&gt;pyqt5-demo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;创建第一个窗口&#34;&gt;创建第一个窗口&lt;/h3&gt;&#xA;&lt;p&gt;一般来说，桌面应用都以窗口(window)形式呈现。因此，要搭建桌面应用，首先要创建窗口。&lt;/p&gt;&#xA;&lt;p&gt;下面这段代码创建了一个空的窗口。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#24292e&#34;&gt;PyQt5.QtWidgets&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#24292e&#34;&gt;sys&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Window&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;QMainWindow&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6639ba&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#6639ba&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#57606a&#34;&gt;# set the title of main window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setWindowTitle&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;My first window - www.luochang.ink&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#57606a&#34;&gt;# set the size of window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;500&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;height &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;0.618&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;resize&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;height&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#953800&#34;&gt;__name__&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QApplication&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;sys&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;argv&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ex &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; Window&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ex&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;show&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;exit&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;app&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;exec_&lt;span style=&#34;color:#1f2328&#34;&gt;())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/blankWindow.png&#34; alt=&#34;blank window&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这段代码仅仅设置了窗口的标题和大小。下一步，我们要往这个空的窗口里添加部件(widget). 为了规范性，我们在Window类里新建一个函数initUI, 然后在initUI里为窗口添加部件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;为窗口添加部件&#34;&gt;为窗口添加部件&lt;/h3&gt;&#xA;&lt;p&gt;下面这段代码为窗口添加了一个按钮部件(QPushButton).&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#24292e&#34;&gt;PyQt5.QtWidgets&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#24292e&#34;&gt;sys&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;Window&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;QMainWindow&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6639ba&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#6639ba&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#57606a&#34;&gt;# set the title of main window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;setWindowTitle&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;My first window - www.luochang.ink&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#57606a&#34;&gt;# set the size of window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;Width &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;500&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;height &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;0.618&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;resize&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;Width&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;height&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;initUI&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;initUI&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#57606a&#34;&gt;# create a new button&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QPushButton&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;first Button&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6a737d&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;btn&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;resize&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#953800&#34;&gt;__name__&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; QApplication&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;sys&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;argv&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ex &lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt; Window&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ex&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;show&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;exit&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;app&lt;span style=&#34;color:#0550ae&#34;&gt;.&lt;/span&gt;exec_&lt;span style=&#34;color:#1f2328&#34;&gt;())&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://luochang212.github.io/img/firstWidget.png&#34; alt=&#34;first widget&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
