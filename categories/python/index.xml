<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Chang Luo</title>
    <link>http://luochang212.github.io/categories/python/</link>
    <description>Recent content in Python on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://luochang212.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>机器学习数学基础</title>
      <link>http://luochang212.github.io/posts/ml_math/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/ml_math/</guid>
      <description>  机器学习数学基础是一个很大的命题。本文既不打算无所不包，也没打算成体系地介绍，算是个人知识总结帖。
 贝叶斯分类  贝叶斯公式
 先验概率、后验概率和条件概率
 极大似然估计
  </description>
    </item>
    
    <item>
      <title>我的 Python 不可能这么麻烦</title>
      <link>http://luochang212.github.io/posts/python_tips/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/python_tips/</guid>
      <description>Python 基础知识笔记，长期更新  GitHub项目地址：python-tips
语言基础 字典 鉴于 JSON 在数据处理中的大量使用，字典的重要性也不言而喻。
本文从以下几个方面介绍字典：
 创建 获取 更新 遍历 排序 删除 字典与JSON   查看示例 
函数 本文目录：
 形参和实参 位置实参 关键字实参 默认值 位置实参和关键字实参的混用 默认值、位置实参和关键字实参的混用 传递任意数量的位置实参 传递任意数量的关键字实参 由字符串函数名生成可调用的函数   查看示例 
装饰器 本代码基于博文: 《Finally understanding decorators in Python》
一个带装饰器的函数看起来是这样的：
def decorator_name(func): def f(): rv = func() return rv return f @decorator_name def func_name(): pass  在上面这段代码中，@decorator_name 就是装饰器。
顾名思义，装饰器是用来装饰东西的。用来装饰什么东西呢？
它是用来装饰函数的。从作用上来说，就是把函数捉出来“装饰”一番，然后放回去。
下面通过一些例子说明装饰器的用法和意义。
 查看示例</description>
    </item>
    
  </channel>
</rss>