<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chang Luo</title>
    <link>http://luochang212.github.io/</link>
    <description>Recent content on Chang Luo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://luochang212.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>初探JavaScript</title>
      <link>http://luochang212.github.io/posts/to_do_list/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/to_do_list/</guid>
      <description>初次学习JavaScript，用JavaScript写了一个计划表生成工具。
 项目链接：计划表生成工具
身为一个JavaScript新手，我并不适应用它编程。它既不像Java原生地支持类和继承，也不如Python声明变量方便，更兼闹出&amp;rdquo;===&amp;ldquo;这样的笑话。但我依旧学习它，因为我深知它的强大。尤其是在可视化这一方面，在接触qtwebengine的时候就已经感受过一次了。目前，我学习JS的平台是W3Schools 和廖雪峰的网站。
其实我学JS才一周，所涉甚浅。为记录思考过程及所获经验，故写此文以记之。
我的初衷 我的初衷是制作一个习惯统计工具，用来分析我在长期计划上的坚持能力。于是照例我对它做了一个需求分析。
习惯统计工具的需求分析：
 需要用户能够注册。即能够声明我是谁，并且把我和我的数据绑定。 需要将数据存在文件里，而不是存在缓存文件里。 需要按时间戳对生成的数据进行统计。 需要对最终结果制作统计图表。  通过分析，我发现静态网页很难实现第一第二步。能不能实现我不敢下定论，但肯定有技术难度。目前，我只有一个由GitHub page托管的静态网页，因此我选择退而求其次。先学习生成一个单一的表格，来记录当天计划的执行情况。我把这个工具叫做计划表生成工具。
需求分析 计划表生成工具好比是习惯统计工具的一个子系统。习惯统计工具面向的是连续多天，而计划表生成工具只面向单独一天。
计划表生成工具的需求分析：
 一个UI界面（前端） 一个允许用户做输入、选择和修改操作的数据流（后端） 一个最终显示的表格（前端） 判断此工具是否easy to use，找到不好用的因素并改进 （测试）  此时我们的big picture就已经明确。战略定了，下面来定战术。
步骤分析 （一）添加计划
对于前端UI，首先我们需要一个textarea，用来接收每项计划的内容。还需要一个按钮，点下这个按钮时，将文本框内的信息添加到计划列表。为了便于存储，我为计划(item)设计了一个类。
这个类的声明如下：
var Items = { name: &amp;quot;&amp;quot;, isCheck: &amp;quot;false&amp;quot;, isDelete: &amp;quot;false&amp;quot; };  可以看出这个类有三个值。它们分别表示该对象的名称，是否完成，以及是否删除。每次添加计划，用以下代码实例化这个类(items)，生成一个对象(item)：
var item = Object.create(Items);  （二）生成表格
这一步要把复选框(checkbox)和按钮(button)都和每一行的计划绑定。那么如何绑定呢？
要知道，用for loop遍历subArray的过程，就是生成表格内容的过程。所以，checkbox和button也都是在这次遍历中生成的。那么，我们就可以在它们的生成过程中，创建它们的id，并把id和计划对应起来。
具体到代码中，我用了i.toString(10)将循环数转成string类型，然后加到id上。于是，第一项计划对应的checkbox的id就是&amp;rdquo;cb0&amp;rdquo;, 对应的button的id就是&amp;rdquo;btn0&amp;rdquo;, 以此类推。
for (i = 0; i &amp;lt; subArray.length; i++) { var index = i+1; body += &#39;&amp;lt;tr&amp;gt;&#39;; body += &#39;&amp;lt;td&amp;gt;&#39; + index.</description>
    </item>
    
    <item>
      <title>PyQt5侧边栏布局</title>
      <link>http://luochang212.github.io/posts/pyqt5_layout_sidebar/</link>
      <pubDate>Fri, 10 May 2019 21:43:09 +0100</pubDate>
      
      <guid>http://luochang212.github.io/posts/pyqt5_layout_sidebar/</guid>
      <description>GitHub项目链接：pyqt5-demo
主流软件如网易云音乐、腾讯电脑管家，都有侧边栏。侧边栏能有效扩展应用空间，使软件功能的层次更加分明。
但PyQt5并没有一个专门的方法实现侧边栏。要实现侧边栏，主要有两种技术路线。一是从标签部件(QTabWidget)改造而来，二是用网格布局(QGridLayout)画出来。本文采用第一种技术路线，制作一个简单的侧边栏应用。
 Note: 两种技术路线制作的侧边栏有细微的差别。如果采用第二种技术路线(QGridLayout)，侧边栏和内容页之间没有明显的分界。所以需要额外地在侧边栏和内容页之间加一条线，来突出两者属于不同的组件。而第一种技术路线(QTabWidget)不需要，创建的侧边栏和内容页之间的区别明显。
下图是一个用第二种技术路线(QGridLayout)制作的应用，可以看到侧边栏和内容页中间画了一条线，以突出两个组件的分界。
 步骤分析 在开始写代码之前，我们先分析一下制作侧边栏需要几个步骤。
 添加部件 为部件设置布局 将标签部件改造成侧边栏的内容页 为侧边栏按钮编写函数，实现内容页之间的跳转  添加部件并设置布局 此段不详述。关于部件和布局的基础知识，在上一篇中有介绍，详见PyQt5 布局浅析。
下面这段代码添加了部件且设置了布局。
from PyQt5.QtWidgets import * import sys class Window(QMainWindow): def __init__(self): super().__init__() # set the title of main window self.setWindowTitle(&#39;Sidebar layout - www.luochang.ink&#39;) # set the size of window self.Width = 800 self.height = int(0.618 * self.Width) self.resize(self.Width, self.height) # add all widgets self.btn_1 = QPushButton(&#39;1&#39;, self) self.btn_2 = QPushButton(&#39;2&#39;, self) self.</description>
    </item>
    
    <item>
      <title>PyQt5布局浅析</title>
      <link>http://luochang212.github.io/posts/pyqt5_layout/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/pyqt5_layout/</guid>
      <description>PyQt5是Python环境下用来开发UI界面的一个包。它容易上手，对初学者友好，并且拥有丰富的函数库，可以实现大部分桌面应用的开发需求，且支持QSS语言，能够对界面风格做个性化调整。总体来说，PyQt5是一款开发效率极高的UI框架。这篇文章从零开始，教你搭建一个属于自己的桌面应用。
 GitHub项目链接：pyqt5-demo
创建第一个窗口 一般来说，桌面应用都以窗口(window)形式呈现。因此，要搭建桌面应用，首先要创建窗口。
下面这段代码创建了一个空的窗口。
from PyQt5.QtWidgets import * import sys class Window(QMainWindow): def __init__(self): super().__init__() # set the title of main window self.setWindowTitle(&#39;My first window - www.luochang.ink&#39;) # set the size of window self.Width = 500 self.height = int(0.618 * self.Width) self.resize(self.Width, self.height) if __name__ == &#39;__main__&#39;: app = QApplication(sys.argv) ex = Window() ex.show() sys.exit(app.exec_())  这段代码仅仅设置了窗口的标题和大小。下一步，我们要往这个空的窗口里添加部件(widget). 为了规范性，我们在Window类里新建一个函数initUI, 然后在initUI里为窗口添加部件。
为窗口添加部件 下面这段代码为窗口添加了一个按钮部件(QPushButton).
from PyQt5.QtWidgets import * import sys class Window(QMainWindow): def __init__(self): super().</description>
    </item>
    
    <item>
      <title>微博数据可视化</title>
      <link>http://luochang212.github.io/posts/my_weibo/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/my_weibo/</guid>
      <description>GitHub项目链接：weibo-analysis
这次的数据用的是本科期间就已经爬好，丢在硬盘里的数据。但因为raw data里夹杂着大量和博文无关的字符，当时又没有足够的编程技巧处理数据，这一丢就是两年。本Python初丁趁着现在还有机会摸鱼，赶紧把数据翻出来，让它们发光发热。
文本获取 因为新浪微博的严防死打，现如今微博的数据越来越不好爬。GitHub上的微博爬虫生存周期通常都很短，使爬取数据的成本大大增加。这里我用的是微博@失眠狸 同学的方法，用鼠标精灵写了个插件，控制快捷键和页面拖动，把内容从浏览器上粘贴到sublime里。
生成csv文件 有了原始数据，接下来我们要把数据归一化，做成方便处理的数据。一个常用的方法就是将数据整理成csv文件。
Step 1. 分析需要保存的字段以及数据的维度，从而设计出数据的存储结构。根据原数据，我划分了五个字段: id, date, time, device, content, 它们分别记录一条微博的文件位置、发布日期、发布时间、发送设备和文本内容。
Step 2. 分割raw data. 先用split函数进行粗略分割，再用find函数精确分割。接着将分割好的内容提取到各字段，并依次存入csv。
经过上述两步，数据的整理工作就做完啦。
可视化微博数据 有了csv文件，做数据可视化是分分钟的事。此时我把工作平台从PyCharm搬到了Jupyter Notebook。这是因为Jupyter Notebook可以制作的各式各样的可视化图表和窗口小工具(widget), 比PyCharm更适合数据处理。至于工具包，这里我选的是pandas和seaborn.
首先是需求分析，我的目标如下:
 绘制日期分布热力图，观察今年使用微博频率的趋势
 绘制设备使用直方图，看看平时最常用什么平台发博
 绘制时间分布直方图，观察一天之中各时段的发博频率
 使用窗口滑块小部件，拖动查看各个时间段都发了什么内容
  这里不描述具体过程，详见GitHub Repository.
分析结果如下:
热力图总体来说颜色逐年加深，说明我正在逐渐成为一个微博控。而且注意到往年年初我是不怎么玩微博的，但随着年纪渐长，1-3月份我玩微博的频率越来越高，这意味着过年可能越来越无聊，没有年味，从而加长了我混迹微博的时间。
是你吗？华为的舔狗~
晚上2点不睡的坏小孩，早上10点起的偷懒者。（此处是一个卑微的笑容）
附录：部分代码 下面这段代码分割了文本。
def classification(self, txt_array, file_index): id = np.array([]) date = np.array([]) time = np.array([]) device = np.array([]) content = np.array([]) count = 0 for ite in range(1, np.</description>
    </item>
    
    <item>
      <title>TSP旅行路线规划</title>
      <link>http://luochang212.github.io/posts/tsp_route/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/tsp_route/</guid>
      <description>GitHub项目链接：tsp-route
对于在欧洲的小伙伴们，复活节假在这一周就正式开始啦。大家都是怎么计划旅行的呢？
我的习惯是在出发前最后一晚，花上半小时，搜索目的地景点 (Point of interest, POI), 然后在Google Maps上为它们点上小星星，以免和它们擦肩而过。我的地图经过一番操作，就成了下面这副模样。
此时此刻，望着这些密集的星星，我不禁自问：如何才能走最少的路，遍历所有景点呢?
搜索了谷歌和百度，都没找到我要路径规划功能。最接近需求是谷歌地图的&amp;rdquo;Add destination&amp;rdquo;功能。然而这个功能只是依次连接你点选的地点。并不能由一组地点，确定连接它们的一条全局最短路径。
没有现成应用怎么办，我打算自己动手写一个。
下图是Google Add destination功能。
适用模型：TSP 模型 如果用一句话概括需求，就是：我们需要一条从某地方出发，遍历所有地点，最终回到起点的最短路径。
学过运筹学的同学发现了，这其实是一个经典问题，旅行商问题(TSP)。旅行商问题的确切描述是这样的：一个商人在各个城市之间旅行，要求遍历所有城市并返回到出发点，要如何规划路线，才能使总路径最短。（打开维基百科了解更多)
解决思路  用googlemaps包获取纬度和经度信息 用OR-Tools包求解TSP问题 最后用gmaps可视化结果  在敲代码的过程中，最难的地方莫过于看文档查API, 搞清楚输入输出和调用结构。不过敲完这一顿之后我还是不禁感慨，GoogleI太为开发者着想了。一旦学会调用API，实现一个简单应用的代码量还是很小的 orz
食用指南 项目地址 &amp;ndash;&amp;gt; 传送门
在运行代码之前，你需要以下配置：
 一个Jupyter Notebook.  你需要安装这些包：googleplaces, googlemaps, gmaps, ortools. 你需要一个Google Maps API key, 从这里获取API.  完成配置等于成功的一半。在Jupyter notebook打开TSPSolver.ipynb，将第二个代码块的所有变量，改成自己的，比如自己的目的地自己的区域和自己的API密码……最后从头到尾运行所有代码块，你就可以得到自己的定制路线辣~
配置代码如下。
# input the places of interest (POI) places = &#39;YHA London Central Hostel&#39;, &#39;Coca-Cola London Eye&#39;, &#39;St. Paul\&#39;s Cathedral&#39;, &#39;Leadenhall Market&#39;, &#39;The National Gallery&#39; \ &#39;Big Ben&#39;, &#39;Buckingham Palace&#39;, &#39;Waterloo Station&#39; # the region Location=&#39;London&#39; # choose a mode Mode = &amp;quot;walking&amp;quot; # &amp;quot;driving&amp;quot;, &amp;quot;walking&amp;quot;, &amp;quot;bicycling&amp;quot;, &amp;quot;transit&amp;quot; # get Google API key from following website: # https://developers.</description>
    </item>
    
    <item>
      <title>Python解置换群问题</title>
      <link>http://luochang212.github.io/posts/python_math_problem/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/python_math_problem/</guid>
      <description>室友问我一个问题，把我难住了。
想不出解法，遂写了个程序暴力求解。
 题目：A permutation is applied to the string SUPERBGOLDHAT. The same permutation is applied to the output from this operation. The second output is OGTHLEPDSUARB. What was the first output? (Note: as an example, the permutation(1 3 4) applied to WOLF gives FOWL. Write your answer in capital letters inside quotation marks, e.g. &amp;ldquo;BEARDPLUGHOST&amp;rdquo;.)
 把它译成中文就是：已知将某个置换作用于字符串SUPERBGOLDHAT两次，生成字符串OGTHLEPDSUARB. 求该置换作用于字符串SUPERBGOLDHAT一次时，生成的结果。
 Note: 作用两次的意思就是，当一个置换规则作用于字符串一次时，会生成一个新字符串。将这个规则作用在这个新字符串上，又会生成一个字符串，这个字符串就是两次作用的结果。
 近世代数基础 如果你不知道什么是置换的话，可以看一下本节。学过近世代数的同学请自觉跳过这部分ꉂ(ˊᗜˋ*)
我们给定一个序列$a ={1, 2, 3, 4, 5, 6} $ 。然后给定一个作用于该序列的置换：</description>
    </item>
    
    <item>
      <title>厨房笔记</title>
      <link>http://luochang212.github.io/posts/kitchen_time/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/kitchen_time/</guid>
      <description>刚到英国，我兴致勃勃地下厨，积累了一点经验。现在回头看，当时的做法都很精致，正应了那句“人生若只如初见”。
  拌牛肉 原料：牛肉3两，猪油，葱，酱油，地瓜粉1匙半，盐
做法：
 牛肉顺纹路切成宽约一寸的肉条，肉条逆纹路切片，装碗，用自来水清洗，沥干，加入一匙猪油和适量的盐与酱油，用手抓揉片刻后，加入一匙半的地瓜粉，继续抓握揉捏约3分钟即可，葱切好备用；
 五匙猪油下锅，至微热，放入适量葱头和小半葱段，煎至略有香味溢出，起锅备用；
 水烧沸，调至小火，牛肉下锅，先不要搅动，待地瓜粉固结后，可用筷子将牛肉摊开，当水再次沸腾时，用漏勺将肉舀出，趁热放入煎好的猪油中搅拌，菜即成。
  亲子丼 原料：米饭，鸡肉，洋葱，鸡蛋，酱油，盐，糖，料酒
做法：
 米饭下锅煮，可弃之不顾。
 鸡肉切小块，放酱油、盐、料酒腌一下；洋葱切短条；鸡蛋稍稍打散。
 鸡肉下锅煎至出油，起锅。此时锅不必洗，放半碗水，加酱油、少量料酒和糖。
 待水烧开，放入鸡肉和洋葱。盖锅盖将鸡肉焖熟，然后倒入一半蛋液，盖锅盖小火焖3分钟。
 起锅盖，倒入剩下一半蛋液。菜即成。
  红烧肉 原料：五花肉，葱，姜，蒜，大料，老抽，生抽，糖，油
做法：
 五花肉切块，葱切段，蒜切末，姜切条。
 倒油，加葱头、姜条、蒜末、大料，小火熬油。油熬出香味后，放五花肉翻炒，闻香即可起锅。
 另起一锅油，倒六七小勺糖，中火将糖煮化。倒入五花肉，翻炒片刻后，加少量水、老抽、生抽。
 时不时搅拌，尝肉汁甜度，不够可加糖。待锅内汤汁收浓稠，起锅享用。
  牛肉丸意大利面 原料：意面、牛肉丸、葱、蒜、番茄、番茄酱
做法：
 烧一壶开水，倒入电饭锅，加两勺盐，放入螺旋意大利面。面煮不烂，可以弃之不顾。
 切葱头，剁蒜泥，番茄切小块备用。
 烧一锅油，放入丸子，翻面煎至定型。
 起锅后油不倒，加入蒜泥葱头炒香。番茄块倒入锅中炒软，然后加大量番茄酱，继续翻炒，以防番茄酱烧焦。
 捞面放入锅中和酱汁搅和搅和，放入丸子，起锅开吃。
  葱油鸡 原料：大鸡腿、葱、姜、蒜、料酒
做法：
 鸡肉处理干净后，用盐给它来个大宝剑。盘中先放葱结、姜片、鸡肉，次淋白葡萄酒。
 鸡肉盛于盘内，冷水入锅，小火蒸20分钟。
 此时切葱末、蒜泥、姜泥备用。
 起油锅，小火炸葱头，出香味后放入葱末、蒜泥、姜泥，煸炒出香味。待肉出锅后，可拿干净的刀切片，再浇葱油。亦可不切，大口嚼之可也。</description>
    </item>
    
    <item>
      <title>基于蚁群算法的证券投资组合优化</title>
      <link>http://luochang212.github.io/posts/markowitz_model/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/markowitz_model/</guid>
      <description>在证券交易中，为了降低风险，经常使用一笔资金购买多支股票。那么，如何合理地选择证券组合，并确定每支证券的资金分配系数，以使预期风险最低，预期收益最高，就成了一个经典的经济学问题 &amp;ndash; 证券投资组合优化问题。
 1952年，马科维茨首次提出均值-方差模型(Markowitz Mean-Variance Model)。该模型利用股票的历史交易数据，定义了股票的预期风险与收益，并引入“无差异曲线”和“有效市场边界”的概念，最终导出了最佳投资组合的计算公式。
本文利用蚁群算法，求解马科维茨均值-方差模型。蚁群算法是一个群体智能算法，因其较强的鲁棒性和适用性，被广泛应用于工业界，是一种研究较为成熟的算法。
研究背景 一个证券投资组合，简单来说就是一组证券及其选购系数的组合。选购系数均大于零（不允许做空），且和为1。
余超在《基于蚁群算法的投资组合优化研究》中给出了完整的模型假设。概括如下：
 一只蚂蚁代表了一个投资组合； 在投资组合优化问题中的蚁群算法要采用连续域优化； 相较于传统蚁群问题，该算法中信息素应该在城市而非路径上积累； 可在蚂蚁移动过程中加入随机扰动以增加全局搜索能力。  余超在模型基础上已经做了非常完整的工作，但是没能求出完整的有效市场边界。
于是，卞蓓丽在《蚁群算法在多目标优化的证券投资组合中的应用研究》中指出，多目标优化的证券投资组合问题是没有绝对最优解的，而是有一群无法相互支配的解形成的有效边界。对多目标优化问题而言，最重要的是求出有效边界，而不仅仅是求出一两个更优解，后者用单目标就可以完成。余超的多目标研究没有求出有效边界。”
卞蓓丽提示我们：首先，投资组合问题，本质上是一个多目标优化问题。其次，我们要计算出完整的有效边界曲线，才算达成预期目标。
余超建立了基础模型，而卞蓓丽在余超的基础上进行了改进。本文借鉴他们二人建立的数学模型，利用多元函数连续域蚁群算法，求解马科维茨均值-方差模型。
研究方法 （一）马科维茨投资组合理论简介
投资组合的预期收益($𝒓_𝒑$)：单一证券i的预期收益为$E\left(r_{i}\right) $，式中$r_{i s}$为针对状况s证券i的收益率，$P_{s}$是状态s出现的概率；在计算了所有N个证券的预期收益率后，就可以计算出证券组合的预期收益率$𝒓_𝒑$，式中$x_{i}$表示组合中证券i所占的比例，即加权系数。
 单一证券i的预期收益: $E\left(r_{i}\right)=\sum_{s=1}^{n} r_{i s} * P_{s}$
 证券组合的预期收益: $\overline{r_{p}}=\sum_{i=1}^{N} x_{i} * E\left(r_{i}\right)$
  投资组合的预期风险($𝝈_{𝒑}$)：单一证券i的预期风险为$\sigma_{\mathrm{i}} $，式中$r_{i s}$为针对状况s证券i的收益率，$P_{S}$是状态s出现的概率，$E\left(r_{i}\right) $为证券i的预期收益率 ；在计算了所有N个证券的预期风险后，就可以计算出证券组合的预期风险$\sigma_{\mathrm{p}}$，式中$\operatorname{cov}_{i j}$表示证券i和证券j的协方差，$x_{i}$和$x_{j}$表示组合中证券i和证券j所占的比例，即加权系数。
 单一证券i的预期风险: $\sigma_{\mathrm{i}}=\left(\sum_{s=1}^{n}\left[r_{i s}-E\left(r_{i}\right)\right]^{2} * P_{S}\right)^{\frac{1}{2}}$
 证券组合的预期风险: $\sigma_{\mathrm{p}}=\left(\sum_{i=1}^{N} \sum_{j=1}^{N} \operatorname{cov}_{i j} * x_{i} * x_{j}\right)^{\frac{1}{2}}$
  有效市场边界: 有效市场边界是所有最佳投资组合(Efficient Portfolio)的集合。有效前沿曲线上面的每一点都代表一个最佳投资组合。下图曲线就是有效市场边界，有效市场边界满足以下两个条件：</description>
    </item>
    
    <item>
      <title>观影：少女哪吒</title>
      <link>http://luochang212.github.io/posts/nezha/</link>
      <pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/posts/nezha/</guid>
      <description>青春可贵，文学高华，可是越是珍贵就越脆弱越易碎。对于一般人来说，破碎的疼痛也许还能承受得住，可是对内心敏感的人，这几乎是欲死的折磨。
我发现，影片中很多人都沉浸于某种爱好。王晓冰喜欢文学和音乐，晓冰妈喜欢舞蹈，晓冰爸外面的女人喜欢钢琴。但他们的爱好不是为了艺术，他们只是借沉浸艺术来麻痹自己。
我猜，王晓冰对家人大喊“虚伪”的原因，大概就是看不惯家人的这种自我麻痹吧？看不惯这种因为怯懦、无法承受就转向麻痹自我的态度。她不满拿音乐和舞蹈麻痹自己的母亲，不满借口“恋爱自由”为自己脱责的父亲。
每个人都为着生活痛苦、狂燥、疲惫不堪，在生活的折磨下渐渐失去勇气。因为不忍正视生活之残酷，他们选择戴上虚伪的面具，假装做出幸福的样子。但晓冰不，她个性干爽利落，追求三毛式的真诚和坦率。就算现实让她疼痛到龇牙咧嘴，她也要把那撇开的嘴角当作笑容。
影片里李小路就像一个完美的存在，她的出现对晓冰而言是上苍的馈赠。就像徐杰说小路是侠女，小路确有一股特殊的气质。英气里带点活泼，让人倍感亲切。有时紧锁的眉头和尖利的眼神又不时提醒着她已是一个有了主见的少女。是小路，让晓冰的生活里有了短暂的纯粹的欢乐。
造成晓冰痛苦的原因是多方位的，家庭的破碎，平庸又手握权力的老师的刁难，爱情的不如意，学业的不顺遂等等。对于这一切，晓冰都毅然决然、不顾后果、绝不妥协地抗争。永远高昂着头，又不幸身为下贱，这场景让我想起妙玉。
总体上讲，电影的场景感觉很碎，只给人提供一种感觉。影片没有悲壮的结局，因此对应地也缺少回响。因为没有回响，因此又显得生涩。也不知道这生涩是好是坏，虽说失掉了反复品咂的回味，但又给思考和体验留了更多空间。
（看的电影很少，还是第一次看这么文艺的电影，写一点个人的感觉 Σ Σ Σ (|||▽||| )</description>
    </item>
    
    <item>
      <title>CHAOS</title>
      <link>http://luochang212.github.io/portfolio/2/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/portfolio/2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>http://luochang212.github.io/portfolio/7/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/portfolio/7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Graphs</title>
      <link>http://luochang212.github.io/portfolio/5/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/portfolio/5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MATLAB中文文档</title>
      <link>http://luochang212.github.io/portfolio/4/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/portfolio/4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>immersivemath</title>
      <link>http://luochang212.github.io/portfolio/3/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/portfolio/3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>中国哲学书电子化计划</title>
      <link>http://luochang212.github.io/portfolio/1/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/portfolio/1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>证券投资组合优化</title>
      <link>http://luochang212.github.io/links/1/</link>
      <pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/links/1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>团队软件项目</title>
      <link>http://luochang212.github.io/links/2/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/links/2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>自然系统的建模与仿真</title>
      <link>http://luochang212.github.io/links/3/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/links/3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>机器学习</title>
      <link>http://luochang212.github.io/links/4/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/links/4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>TSP旅行路线规划</title>
      <link>http://luochang212.github.io/links/5/</link>
      <pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/links/5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>微博数据可视化</title>
      <link>http://luochang212.github.io/links/6/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/links/6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>3D场景制作</title>
      <link>http://luochang212.github.io/links/7/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/links/7/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/gadget/book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/gadget/book/</guid>
      <description>Deep Learninghtml{background-image: &#34;&#34;;background-position:center top;background-repeat:no-repeat;width:800px;margin:auto;}标题标题说点啥
标题说点啥
标题说点啥
说点啥
标题说点啥
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/gadget/showtime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/gadget/showtime/</guid>
      <description>现在几点了？body {font-family: &#34;Source Han Sans&#34;, &#34;San Francisco&#34;, &#34;PingFang SC&#34;, &#34;Hiragino Sans GB&#34;, &#34;Droid Sans Fallback&#34;, &#34;Microsoft YaHei&#34;, sans-serif;font-size: 14px;color: #333;}a {text-decoration: none;color: #f66;transition-property: color;transition-duration: .2s;transition-timing-function: ease-in-out;}a:hover {color: #333;}p {margin: 1em 0;}p:empty {height: 1.5em;}main {margin: 0 5em;max-width: 48em;}h1 {margin: 1em 0;font-size: 24px;font-weight: 300;}textarea, article {width: 100%;height: 12em;margin: 2em 0;padding: .</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/gadget/todolist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/gadget/todolist/</guid>
      <description>计划表生成工具var Items = {name: &#34;&#34;,isCheck: &#34;false&#34;,isDelete: &#34;false&#34;};var objArray = [];var subArray = [];var submit_flag = true;var delete_flag = true;function addElement() {submit_flag = true;var item = Object.create(Items);var v = document.getElementById(&#34;myTextarea&#34;).value;item.name = vobjArray.push(item);var body = &#39;#Name&#39;for (i = 0; i &#39;;body += &#39;&#39; + index.toString(10) + &#39;&#39;;//body += &#39;&#39; + &#39;&#39; + &#39;&#39;;body += &#39;&#39; + objArray[i].</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/3d_scene/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/3d_scene/</guid>
      <description>3D场景建模body {background: #ffc19f;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 70px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 60px;font-weight: normal;margin: 0;color: #cc4037;font-family: &#39;Chelsea Market&#39;, Georgia, serif;}h3 {font-size: 40px;font-weight: normal;color: #7d1f19;margin: 0;margin-top: 40px;text-transform: lowercase;}p {//width: 960px;margin: 40px auto;color: #000;line-height: 200%;}p a { color: #FFFfont-size: 40px; font-weight: normal;font-style: normal; background-color: #06406c; padding: 10px 15px; border-radius: 10px; text-decoration: none; }p a:hover { text-decoration: underline; }a, a:visited {color: #000;font-size: 14px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: disc; margin: 0; padding: 0;}ul li a { font-size: 24px; color: #cc4037; }.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/machine_learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/machine_learning/</guid>
      <description>机器学习body {background: #ffc19f;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 70px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 60px;font-weight: normal;margin: 0;color: #cc4037;font-family: &#39;Chelsea Market&#39;, Georgia, serif;}h3 {font-size: 40px;font-weight: normal;color: #7d1f19;margin: 0;margin-top: 40px;text-transform: lowercase;}p {//width: 960px;margin: 40px auto;color: #000;line-height: 200%;}p a { color: #FFFfont-size: 40px; font-weight: normal;font-style: normal; background-color: #06406c; padding: 10px 15px; border-radius: 10px; text-decoration: none; }p a:hover { text-decoration: underline; }a, a:visited {color: #000;font-size: 14px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: disc; margin: 0; padding: 0;}ul li a { font-size: 24px; color: #cc4037; }.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/markowitz_model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/markowitz_model/</guid>
      <description>基于蚁群算法的证券投资组合优化body {background: #FFF;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 60px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 70px;font-weight: normal;margin: 0;color: #FFB000;font-family: &#39;Chelsea Market&#39;, Georgia, serif;text-transform: lowercase;}h3 {font-size: 40px;font-weight: normal;margin: 0;margin-top: 40px;text-transform: lowercase;}p {width: 960px;margin: 40px auto;color: #000;line-height: 200%;}a, a:visited {color: #000;font-size: 14px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: none;}.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/my_weibo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/my_weibo/</guid>
      <description>微博数据可视化body {background: #ffc19f;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 70px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 60px;font-weight: normal;margin: 0;color: #cc4037;font-family: &#39;Chelsea Market&#39;, Georgia, serif;}h3 {font-size: 40px;font-weight: normal;color: #7d1f19;margin: 0;margin-top: 40px;text-transform: lowercase;}p {//width: 960px;margin: 40px auto;color: #000;line-height: 200%;}p a { color: #FFFfont-size: 40px; font-weight: normal;font-style: normal; background-color: #06406c; padding: 10px 15px; border-radius: 10px; text-decoration: none; }p a:hover { text-decoration: underline; }a, a:visited {color: #000;font-size: 14px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: disc; margin: 0; padding: 0;}ul li a { font-size: 24px; color: #cc4037; }.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/nature_system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/nature_system/</guid>
      <description>自然系统的建模与仿真body {background: #ffc19f;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 70px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 60px;font-weight: normal;margin: 0;color: #cc4037;font-family: &#39;Chelsea Market&#39;, Georgia, serif;}h3 {font-size: 40px;font-weight: normal;color: #7d1f19;margin: 0;margin-top: 40px;text-transform: lowercase;}p {//width: 960px;margin: 40px auto;color: #000;line-height: 200%;}p a { color: #FFFfont-size: 40px; font-weight: normal;font-style: normal; background-color: #06406c; padding: 10px 15px; border-radius: 10px; text-decoration: none; }p a:hover { text-decoration: underline; }a, a:visited {color: #000;font-size: 14px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: disc; margin: 0; padding: 0;}ul li a { font-size: 24px; color: #cc4037; }.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/team_software_project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/team_software_project/</guid>
      <description>团队软件项目body {background: #ffc19f;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 70px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 60px;font-weight: normal;margin: 0;color: #cc4037;font-family: &#39;Chelsea Market&#39;, Georgia, serif;}h3 {font-size: 40px;font-weight: normal;color: #7d1f19;margin: 0;margin-top: 40px;text-transform: lowercase;}p {//width: 960px;margin: 40px auto;color: #000;line-height: 200%;}p a { color: #FFFfont-size: 40px; font-weight: normal;font-style: normal; background-color: #06406c; padding: 10px 15px; border-radius: 10px; text-decoration: none; }p a:hover { text-decoration: underline; }a, a:visited {color: #000;font-size: 14px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: disc; margin: 0; padding: 0;}ul li a { font-size: 24px; color: #cc4037; }.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/test/</guid>
      <description>基于蚁群算法的证券投资组合优化body {background: #FFF;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 60px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 70px;font-weight: normal;margin: 0;color: #FFB000;font-family: &#39;Chelsea Market&#39;, Georgia, serif;text-transform: lowercase;}h3 {font-size: 40px;font-weight: normal;margin: 0;margin-top: 40px;text-transform: lowercase;}p {width: 960px;margin: 40px auto;color: #000;line-height: 200%;}a, a:visited {color: #000;font-size: 12px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: none;}.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://luochang212.github.io/project/tsp_route/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/project/tsp_route/</guid>
      <description>TSP旅行路线规划body {background: #ffc19f;font-family: Georgia, Times New Roman, Times, serif;font-size: 30px;text-align: center;margin: 0;padding: 0;}h1 {font-size: 70px;font-weight: normal;margin: 0;font-family: &#39;Chelsea Market&#39;, Georgia, serif;color: #000;line-height: 1;}h2 {font-size: 60px;font-weight: normal;margin: 0;color: #cc4037;font-family: &#39;Chelsea Market&#39;, Georgia, serif;}h3 {font-size: 40px;font-weight: normal;color: #7d1f19;margin: 0;margin-top: 40px;text-transform: lowercase;}p {//width: 960px;margin: 40px auto;color: #000;line-height: 200%;}p a { color: #FFFfont-size: 40px; font-weight: normal;font-style: normal; background-color: #06406c; padding: 10px 15px; border-radius: 10px; text-decoration: none; }p a:hover { text-decoration: underline; }a, a:visited {color: #000;font-size: 14px;text-decoration: none;}a:hover {text-decoration: underline;}ul {list-style: disc; margin: 0; padding: 0;}ul li a { font-size: 24px; color: #cc4037; }.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>http://luochang212.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://luochang212.github.io/about/</guid>
      <description>Hi there!
I am an ACS student who met NLP in 2019 and worked very hard to learn it from then on. I’m especially interested in NLP.
My undergraduate major was math. So when I started my master&amp;rsquo;s program I didn&amp;rsquo;t have a solid programming foundation. Over the past half year, I kept practising my programming skills. For example, I do exercises on Leetcode almost every day. So far, I have finished 29 questions.</description>
    </item>
    
  </channel>
</rss>